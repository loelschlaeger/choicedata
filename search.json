[{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"http://loelschlaeger.de/choicedata/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"http://loelschlaeger.de/choicedata/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lennart Oelschläger. Author, maintainer.","code":""},{"path":"http://loelschlaeger.de/choicedata/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Oelschläger L (2025). choicedata: Working Choice Data R. R package version 0.1.0, https://github.com/loelschlaeger/choicedata.","code":"@Manual{,   title = {choicedata: Working with Choice Data in R},   author = {Lennart Oelschläger},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/loelschlaeger/choicedata}, }"},{"path":"http://loelschlaeger.de/choicedata/index.html","id":"choice-data-in-r-","dir":"","previous_headings":"","what":"Working with Choice Data in R","title":"Working with Choice Data in R","text":"choicedata package simplifies working choice data R.","code":""},{"path":"http://loelschlaeger.de/choicedata/index.html","id":"package-design","dir":"","previous_headings":"","what":"Package design","title":"Working with Choice Data in R","text":"package breaks process modeling choice data series steps. step represented object contains necessary information subsequent step.  choice_formula: choice model formula. choice_alternatives: set choice alternatives. choice_effects: choice effects, defined choice_alternatives choice_formula. choice_parameters: model parameters, determined choice_effects estimated via choice_likelihood. choice_identifiers: identifiers deciders choice occasions. choice_preferences: deciders’ choice preferences, identified choice_identifiers. choice_responses: choice responses, influenced choice_preferences. choice_covariates: choice covariates. choice_data: choice data, built choice_covariates choice_responses. choice_probabilities: choice probabilities, computed choice_data choice_parameters. choice_likelihood: likelihood choice model, formed choice_probabilities. objects designed modular can combined various ways create range modeling workflows.","code":""},{"path":[]},{"path":"http://loelschlaeger.de/choicedata/index.html","id":"empirical-data","dir":"","previous_headings":"Examples","what":"Empirical data","title":"Working with Choice Data in R","text":"travel_mode_choice data set contains revealed preferences 210 travelers choosing plane, train, bus, car. can transform data long wide format, construct model design matrices:","code":"library(\"choicedata\")  travel_mode_choice #> # A tibble: 840 × 8 #>    individual mode  choice  wait  cost travel income  size #>         <int> <chr>  <int> <int> <int>  <int>  <int> <int> #>  1          1 plane      0    69    59    100     35     1 #>  2          1 train      0    34    31    372     35     1 #>  3          1 bus        0    35    25    417     35     1 #>  4          1 car        1     0    10    180     35     1 #>  5          2 plane      0    64    58     68     30     2 #>  6          2 train      0    44    31    354     30     2 #>  7          2 bus        0    53    25    399     30     2 #>  8          2 car        1     0    11    255     30     2 #>  9          3 plane      0    69   115    125     40     1 #> 10          3 train      0    34    98    892     40     1 #> # ℹ 830 more rows  long_to_wide(   data_frame = travel_mode_choice,   column_alternative = \"mode\",   column_decider = \"individual\" ) #> # A tibble: 210 × 16 #>    individual income  size wait_plane wait_train wait_bus wait_car cost_plane #>         <int>  <int> <int>      <int>      <int>    <int>    <int>      <int> #>  1          1     35     1         69         34       35        0         59 #>  2          2     30     2         64         44       53        0         58 #>  3          3     40     1         69         34       35        0        115 #>  4          4     70     3         64         44       53        0         49 #>  5          5     45     2         64         44       53        0         60 #>  6          6     20     1         69         40       35        0         59 #>  7          7     45     1         45         34       35        0        148 #>  8          8     12     1         69         34       35        0        121 #>  9          9     40     1         69         34       35        0         59 #> 10         10     70     2         69         34       35        0         58 #> # ℹ 200 more rows #> # ℹ 8 more variables: cost_train <int>, cost_bus <int>, cost_car <int>, #> #   travel_plane <int>, travel_train <int>, travel_bus <int>, travel_car <int>, #> #   choice <chr>  mode_effects <- choice_effects(   choice_formula = choice_formula(     formula = choice ~ cost | income + size | travel + wait,     error_term = \"probit\"   ),   choice_alternatives = choice_alternatives(     J = 4,     alternatives = unique(travel_mode_choice$mode)   ) )  mode_data <- choice_data(   data_frame = travel_mode_choice,   format = \"long\",   column_choice = \"choice\",   column_decider = \"individual\",   column_alternative = \"mode\",   column_ac_covariates = c(\"income\", \"size\"),   column_as_covariates = c(\"wait\", \"cost\", \"travel\") )  design_matrices <- design_matrices(mode_data, mode_effects) design_matrices[[1]] #>       cost income_car income_plane income_train size_car size_plane size_train #> bus     25          0            0            0        0          0          0 #> car     10         35            0            0        1          0          0 #> plane   59          0           35            0        0          1          0 #> train   31          0            0           35        0          0          1 #>       ASC_car ASC_plane ASC_train travel_bus travel_car travel_plane #> bus         0         0         0        417          0            0 #> car         1         0         0          0        180            0 #> plane       0         1         0          0          0          100 #> train       0         0         1          0          0            0 #>       travel_train wait_bus wait_car wait_plane wait_train #> bus              0       35        0          0          0 #> car              0        0        0          0          0 #> plane            0        0        0         69          0 #> train          372        0        0          0         34"},{"path":"http://loelschlaeger.de/choicedata/index.html","id":"simulated-choice","dir":"","previous_headings":"Examples","what":"Simulated choice","title":"Working with Choice Data in R","text":"generate_choice_data() makes straightforward simulate choice data. example simulates 200 ranking tasks three alternatives recovers data-generating parameters via numerical optimization likelihood:","code":"library(\"choicedata\")  set.seed(1)  sim_effects <- choice_effects(   choice_formula = choice_formula(     formula = choice ~ A | B | C,     error_term = \"logit\"   ),   choice_alternatives = choice_alternatives(     J = 3,     alternatives = c(\"A\", \"B\", \"C\")   ) )  sim_parameters <- generate_choice_parameters(sim_effects)  (sim_data <- generate_choice_data(   choice_effects = sim_effects,   choice_identifiers = generate_choice_identifiers(N = 200),   choice_parameters = sim_parameters,   choice_type = \"ranked\" )) #> # A tibble: 200 × 13 #>    deciderID occasionID choice        B choice_A choice_B choice_C     A_A #>  * <chr>     <chr>      <chr>     <dbl>    <int>    <int>    <int>   <dbl> #>  1 1         1          B       1.12           2        1        3  0.576  #>  2 2         1          B       0.782          3        1        2 -0.0449 #>  3 3         1          B      -0.478          2        1        3  0.0746 #>  4 4         1          B      -0.415          3        1        2  0.418  #>  5 5         1          B       0.697          2        1        3 -0.394  #>  6 6         1          B       0.881          2        1        3  0.557  #>  7 7         1          B      -0.367          3        1        2  0.398  #>  8 8         1          B       0.0280         3        1        2 -1.04   #>  9 9         1          C       0.476          3        2        1 -0.743  #> 10 10        1          B       0.00111        2        1        3 -0.710  #> # ℹ 190 more rows #> # ℹ 5 more variables: A_B <dbl>, A_C <dbl>, C_A <dbl>, C_B <dbl>, C_C <dbl>  sim_likelihood <- choice_likelihood(   choice_data = sim_data,   choice_effects = sim_effects )  objective <- sim_likelihood$objective true_vector <- switch_parameter_space(   choice_parameters = sim_parameters,   choice_effects = sim_effects )  fit <- stats::optim(   par = stats::rnorm(length(true_vector)),   fn = function(par) {     objective(choice_parameters = par, logarithm = TRUE, negative = TRUE)   } )  estimated_parameters <- switch_parameter_space(   choice_parameters = fit$par,   choice_effects = sim_effects )  data.frame(dgp = true_vector, estimated = fit$par) #>               dgp   estimated #> beta_1 -1.9810209 -2.04179163 #> beta_2  0.5807312  0.04789289 #> beta_3 -2.6424897 -3.05406623 #> beta_4  5.0447208  4.82873952 #> beta_5  1.0419951  0.99061141 #> beta_6 -2.5945488 -2.75745549 #> beta_7  1.5413860  1.21554512 #> beta_8  2.3347877  1.96729481"},{"path":"http://loelschlaeger.de/choicedata/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Working with Choice Data in R","text":"can install released package version CRAN :","code":"install.packages(\"choicedata\")"},{"path":"http://loelschlaeger.de/choicedata/index.html","id":"related-work","dir":"","previous_headings":"","what":"Related work","title":"Working with Choice Data in R","text":"{Rprobit} (Bauer et al. 2023) provides maximum approximated composite marginal likelihood estimation efficient probit choice modeling. RprobitB (Oelschläger Bauer 2025) provides Bayesian tools estimating probit models.","code":""},{"path":"http://loelschlaeger.de/choicedata/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Working with Choice Data in R","text":"question, found bug, request feature, want give feedback, like contribute? Please file issue GitHub.","code":""},{"path":[]},{"path":"http://loelschlaeger.de/choicedata/reference/choice_alternatives.html","id":null,"dir":"Reference","previous_headings":"","what":"Define choice alternatives — choice_alternatives","title":"Define choice alternatives — choice_alternatives","text":"choice_alternatives object defines set choice alternatives.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_alternatives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define choice alternatives — choice_alternatives","text":"","code":"choice_alternatives(   J = 2,   alternatives = LETTERS[1:J],   base = NULL,   ordered = FALSE )  # S3 method for class 'choice_alternatives' print(x, ...)"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_alternatives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define choice alternatives — choice_alternatives","text":"J [integer(1)] number \\(\\geq 2\\) choice alternatives. alternatives [character(J)] Unique labels choice alternatives. base [character(1)] name base alternative alternative-constant covariates, see details. NULL (default), set first element sorted alternatives. ordered [logical(1)] supplied order alternatives preserved treated intrinsic ranking (ordered response models)? TRUE, alternatives kept given order. Otherwise, sorted alphabetically. x [choice_alternatives] choice_alternatives object. ... Currently used.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_alternatives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define choice alternatives — choice_alternatives","text":"object class choice_alternatives, .e. character vector choice alternatives attributes: J number choice alternatives. base name base alternative. ordered alternatives encode inherent ordering?","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_alternatives.html","id":"base-alternative","dir":"Reference","previous_headings":"","what":"Base alternative","title":"Define choice alternatives — choice_alternatives","text":"full set coefficients covariates constant across alternatives (including alternative-specific constants) identified. achieve identifiability, coefficient alternative base fixed zero. coefficients interpreted respect base. base alternative marked * printing choice_alternatives object.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_alternatives.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define choice alternatives — choice_alternatives","text":"","code":"choice_alternatives(   J = 3,   alternatives = c(\"gas\", \"electricity\", \"oil\"),   base = \"gas\" ) #>  #> ── Choice alternatives  #> • electricity #> • gas* #> • oil"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Define choice covariates — choice_covariates","title":"Define choice covariates — choice_covariates","text":"choice_covariates object defines choice model covariates. generate_choice_covariates() samples covariates. covariate_names() gives covariate names given choice_effects. design_matrices() builds design matrices.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define choice covariates — choice_covariates","text":"","code":"choice_covariates(   data_frame,   format = \"wide\",   column_decider = \"deciderID\",   column_occasion = NULL,   column_alternative = NULL,   column_ac_covariates = NULL,   column_as_covariates = NULL,   delimiter = \"_\",   cross_section = is.null(column_occasion) )  generate_choice_covariates(   choice_effects = NULL,   choice_identifiers = generate_choice_identifiers(N = 100),   labels = covariate_names(choice_effects),   n = nrow(choice_identifiers),   marginals = list(),   correlation = diag(length(labels)),   verbose = FALSE,   delimiter = \"_\" )  covariate_names(choice_effects)  design_matrices(   x,   choice_effects,   choice_identifiers = extract_choice_identifiers(x) )"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define choice covariates — choice_covariates","text":"data_frame [data.frame] Contains choice covariates. format [character(1)] Format data_frame. Use \"wide\" covariates alternatives stored single row per occasion \"long\" alternative forms separate row. column_decider [character(1)] Column name decider identifiers. column_occasion [character(1) | NULL] Column name occasion identifiers. Set NULL cross-sectional data. column_alternative [character(1) | NULL] Column name alternative identifiers format = \"long\". column_ac_covariates [character() | NULL] Column names alternative-constant covariates. column_as_covariates [character() | NULL] Column names alternative-specific covariates data_frame. delimiter [character(1)] Delimiter separating alternative identifiers covariate names wide format. May consist one characters. cross_section [logical(1)] Treat choice data cross-sectional? choice_effects [choice_effects | NULL] Optional choice_effects object used align covariate labels. choice_identifiers [choice_identifiers] choice_identifiers object describing simulated panel. labels [character()] Unique labels regressors. n [integer(1)] number values per regressor. marginals [list()] Optionally marginal distributions regressors. specified, standard normal marginal distributions used. list entry must named according regressor label, following distributions currently supported: discrete distributions Poisson: list(type = \"poisson\", lambda = ...) categorical: list(type = \"categorical\", p = c(...)) continuous distributions normal: list(type = \"normal\", mean = ..., sd = ...) uniform: list(type = \"uniform\", min = ..., max = ...) correlation [matrix()] correlation matrix dimension length(labels), (p, q)-th entry defines correlation regressor labels[p] labels[q]. verbose [logical(1)] Print information simulated regressors? x choice_data choice_covariates object.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define choice covariates — choice_covariates","text":"tibble.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_covariates.html","id":"design-matrices","dir":"Reference","previous_headings":"","what":"Design matrices","title":"Define choice covariates — choice_covariates","text":"covariate design matrix contains choice covariates decider choice occasion. dimension J x P, J number choice alternatives P number effects. See compute_P compute number P.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_covariates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define choice covariates — choice_covariates","text":"","code":"choice_effects <- choice_effects(   choice_formula = choice_formula(     formula = choice ~ price | income | comfort,     error_term = \"probit\",     random_effects = c(       \"price\" = \"cn\",       \"income\" = \"cn\"     )   ),   choice_alternatives = choice_alternatives(J = 3) )  ids <- generate_choice_identifiers(N = 3, Tp = 2)  choice_covariates <- generate_choice_covariates(   choice_effects = choice_effects,   choice_identifiers = ids )"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Define choice data — choice_data","title":"Define choice data — choice_data","text":"choice_data object defines choice data, combination choice_responses choice_covariates.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define choice data — choice_data","text":"","code":"choice_data(   data_frame,   format = \"wide\",   column_choice = \"choice\",   column_decider = \"deciderID\",   column_occasion = NULL,   column_alternative = NULL,   column_ac_covariates = NULL,   column_as_covariates = NULL,   delimiter = \"_\",   cross_section = is.null(column_occasion),   choice_type = c(\"discrete\", \"ordered\", \"ranked\") )  generate_choice_data(   choice_effects,   choice_identifiers = generate_choice_identifiers(N = 100),   choice_covariates = NULL,   choice_parameters = NULL,   choice_preferences = NULL,   column_choice = \"choice\",   choice_type = c(\"auto\", \"discrete\", \"ordered\", \"ranked\") )  long_to_wide(   data_frame,   column_ac_covariates = NULL,   column_as_covariates = NULL,   column_choice = \"choice\",   column_alternative = \"alternative\",   column_decider = \"deciderID\",   column_occasion = NULL,   alternatives = unique(data_frame[[column_alternative]]),   delimiter = \"_\",   choice_type = c(\"discrete\", \"ordered\", \"ranked\") )  wide_to_long(   data_frame,   column_choice = \"choice\",   column_alternative = \"alternative\",   alternatives = NULL,   delimiter = \"_\",   choice_type = c(\"discrete\", \"ordered\", \"ranked\") )"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define choice data — choice_data","text":"data_frame [data.frame] Contains choice data. format [character(1)] Format data_frame. Use \"wide\" row contains alternatives occasion \"long\" row contains single alternative. column_choice [character(1)] Column name observed choices. wide layout column contain single value per observation: discrete data value label chosen alternative, ordered data ordered factor integer score, ranked data omitted favour one column per alternative (see choice_type). long layout column evaluated per alternative: discrete data must use binary indicator (1 chosen alternative, 0 otherwise), ordered data repeats ordinal value every alternative, ranked data stores integer rank 1:J alternative within observation. Set NULL observed choices available (e.g., purely covariate tables). column_decider [character(1)] Column name decider identifiers. column_occasion [character(1) | NULL] Column name occasion identifiers. Set NULL cross-sectional data. column_alternative [character(1) | NULL] Column name alternative identifiers format = \"long\". column_ac_covariates [character() | NULL] Column names alternative-constant covariates. column_as_covariates [character()] Column names data_frame alternative-specific covariates. delimiter [character(1)] Delimiter separating alternative identifiers covariate names wide format. May consist one characters. cross_section [logical(1)] Treat choice data cross-sectional? choice_type [character(1)] Requested response type. Use \"auto\" (default) infer mode choice_alternatives(), explicitly simulate \"discrete\", \"ordered\", \"ranked\" outcomes. choice_effects [choice_effects] choice_effects object describing model. choice_identifiers [choice_identifiers] choice_identifiers object provides decider occasion identifiers. choice_covariates [choice_covariates] Covariates include generated data. choice_parameters [choice_parameters] Model parameters supplying utilities covariance structures. choice_preferences [choice_preferences] Decider-specific preference draws used simulation. alternatives [character(J)] Unique labels choice alternatives.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define choice data — choice_data","text":"tibble inherits choice_data.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define choice data — choice_data","text":"choice_data() acts main entry point observed data. accepts either long wide layouts performs extensive validation returning tidy tibble consistent identifiers. Columns refer alternative aligned using delimiter downstream helpers can detect automatically. used ranked ordered choices function checks rankings complete warns early inconsistencies. Internally helper converts long inputs wide format. guarantees subsequent steps (computing probabilities) receive structure regardless original layout keeps workflow concise. generate_choice_data() simulates choice data. wide_to_long() long_to_wide() transform wide long format. generated choice_data object inherits choice_type attribute matches requested simulation mode. Ordered alternatives (ordered = TRUE) yield ordered responses, unordered alternatives default discrete multinomial outcomes, ranked simulations return complete rankings every observation.","code":""},{"path":[]},{"path":"http://loelschlaeger.de/choicedata/reference/choice_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define choice data — choice_data","text":"","code":"### simulate data from a multinomial probit model choice_effects <- choice_effects(   choice_formula = choice_formula(     formula = choice ~ A | B, error_term = \"probit\",     random_effects = c(\"A\" = \"cn\")   ),   choice_alternatives = choice_alternatives(J = 3) ) generate_choice_data(choice_effects) #> # A tibble: 100 × 7 #>    deciderID occasionID choice      B     A_A     A_B     A_C #>  * <chr>     <chr>      <chr>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 1         1          C       0.118  2.76    0.0465  0.578  #>  2 2         1          C      -0.206 -1.91    0.862  -0.243  #>  3 3         1          C      -2.27   0.0192  0.0296  0.550  #>  4 4         1          A       1.07   2.68   -0.361   0.213  #>  5 5         1          C      -1.18  -0.665   1.11   -0.246  #>  6 6         1          C       0.489 -0.976   1.07    0.132  #>  7 7         1          A       1.34  -1.70   -1.47    0.284  #>  8 8         1          C       0.607  0.237   1.32    0.524  #>  9 9         1          A       1.92  -0.110   0.172  -0.0903 #> 10 10        1          C      -0.548  1.30    0.749   0.556  #> # ℹ 90 more rows  ### transform between long/wide format long_to_wide(   data_frame = travel_mode_choice,   column_alternative = \"mode\",   column_decider = \"individual\" ) #> # A tibble: 210 × 16 #>    individual income  size wait_plane wait_train wait_bus wait_car cost_plane #>         <int>  <int> <int>      <int>      <int>    <int>    <int>      <int> #>  1          1     35     1         69         34       35        0         59 #>  2          2     30     2         64         44       53        0         58 #>  3          3     40     1         69         34       35        0        115 #>  4          4     70     3         64         44       53        0         49 #>  5          5     45     2         64         44       53        0         60 #>  6          6     20     1         69         40       35        0         59 #>  7          7     45     1         45         34       35        0        148 #>  8          8     12     1         69         34       35        0        121 #>  9          9     40     1         69         34       35        0         59 #> 10         10     70     2         69         34       35        0         58 #> # ℹ 200 more rows #> # ℹ 8 more variables: cost_train <int>, cost_bus <int>, cost_car <int>, #> #   travel_plane <int>, travel_train <int>, travel_bus <int>, travel_car <int>, #> #   choice <chr> wide_to_long(   data_frame = train_choice ) #> # A tibble: 5,858 × 8 #>    deciderID occasionID choice alternative price  time change comfort #>        <int>      <int>  <int> <chr>       <dbl> <dbl>  <int> <fct>   #>  1         1          1      1 A            52.9  2.5       0 1       #>  2         1          1      0 B            88.1  2.5       0 1       #>  3         1          2      1 A            52.9  2.5       0 1       #>  4         1          2      0 B            70.5  2.17      0 1       #>  5         1          3      1 A            52.9  1.92      0 1       #>  6         1          3      0 B            88.1  1.92      0 0       #>  7         1          4      0 A            88.1  2.17      0 1       #>  8         1          4      1 B            70.5  2.5       0 0       #>  9         1          5      0 A            52.9  2.5       0 1       #> 10         1          5      1 B            70.5  2.5       0 0       #> # ℹ 5,848 more rows"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Define choice model effects — choice_effects","title":"Define choice model effects — choice_effects","text":"function constructs object class choice_effects, defines effects choice model.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define choice model effects — choice_effects","text":"","code":"choice_effects(   choice_formula,   choice_alternatives,   choice_data = NULL,   delimiter = \"_\" )  # S3 method for class 'choice_effects' print(x, ...)"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define choice model effects — choice_effects","text":"choice_formula [choice_formula] choice_formula object. choice_alternatives [choice_alternatives] choice_alternatives object. choice_data [NULL | choice_data] choice_data object. Required resolve data-dependent elements choice_formula (). delimiter [character(1)] delimiter covariate alternative name. x [choice_effects] choice_effects object printed. ... Currently used.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define choice model effects — choice_effects","text":"choice_effects object, data.frame, row model effect, columns \"effect_name\", name effect composed covariate alternative name, \"generic_name\", generic effect name \"beta_<effect number>\", \"covariate\", (transformed) covariate name connected effect, \"alternative\", alternative name connected effect (effect alternative-specific), \"as_covariate\", indicator whether covariate alternative-specific, \"as_effect\", indicator whether effect alternative-specific, \"mixing\", factor levels order \"cn\" (correlated normal distribution), indicating type random effect. identification, choice effects ordered according following rules: Non-random effects come random effects. According ordering factor mixing. Otherwise, order determined occurrence formula. contains arguments choice_formula, choice_alternatives, delimiter attributes.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_effects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define choice model effects — choice_effects","text":"","code":"choice_effects(   choice_formula = choice_formula(     formula = choice ~ price | income | I(comfort == 1),     error_term = \"probit\",     random_effects = c(       \"price\" = \"cn\",       \"income\" = \"cn\"      )   ),   choice_alternatives = choice_alternatives(J = 3) ) #>  #> ── Choice effects  #>       effect_name generic_name     covariate alternative as_covariate as_effect #> 1           ASC_B       beta_1          <NA>           B        FALSE      TRUE #> 2           ASC_C       beta_2          <NA>           C        FALSE      TRUE #> 3 I(comfort==1)_A       beta_3 I(comfort==1)           A         TRUE      TRUE #> 4 I(comfort==1)_B       beta_4 I(comfort==1)           B         TRUE      TRUE #> 5 I(comfort==1)_C       beta_5 I(comfort==1)           C         TRUE      TRUE #> 6           price       beta_6         price        <NA>         TRUE     FALSE #> 7        income_B       beta_7        income           B        FALSE      TRUE #> 8        income_C       beta_8        income           C        FALSE      TRUE #>   mixing #> 1   <NA> #> 2   <NA> #> 3   <NA> #> 4   <NA> #> 5   <NA> #> 6     cn #> 7     cn #> 8     cn"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Define choice model formula — choice_formula","title":"Define choice model formula — choice_formula","text":"choice_formula object defines choice model equation.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define choice model formula — choice_formula","text":"","code":"choice_formula(formula, error_term = \"probit\", random_effects = character())  # S3 method for class 'choice_formula' print(x, ...)"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define choice model formula — choice_formula","text":"formula [formula] symbolic description choice model, see details. error_term [character(1)] Defines model's error term. Current options : \"probit\" (default): errors multivariate normally distributed \"logit\": errors follow type-extreme value distribution random_effects [character()] Defines random effects model. expected format elements random_effects \"<covariate>\" = \"<distribution>\", \"<covariate>\" name variable formula right-hand side. Every random effect must reference explicit covariate (\"ASC\" alternative-specific constants) appears supplied model formula. Current options \"<distribution>\" : \"cn\": correlated (\"cn\" random effects) normal distribution random effects ASCs, use \"ASC\" \"<covariate>\". x [choice_formula] choice_formula object. ... Currently used.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define choice model formula — choice_formula","text":"object class choice_formula, list elements: formula model formula. error_term name model's error term specification. choice name response variable. covariate_types () three different types covariates. ASC model ASCs? random_effects names covariates random effects.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_formula.html","id":"specifying-the-model-formula","dir":"Reference","previous_headings":"","what":"Specifying the model formula","title":"Define choice model formula — choice_formula","text":"structure formula choice ~ | B | C, .e., standard formula object three parts right-hand side, separated |, choice name discrete response variable, names alternative-specific covariates coefficient constant across alternatives, B names covariates constant across alternatives, C names alternative-specific covariates alternative-specific coefficients. following rules apply: default, intercepts (referred alternative-specific constants, ASCs) added model. can removed adding + 0 second part, e.g., choice ~ | B + 0 | C. include covariates second type estimate ASCs, add 1 second part, e.g., choice ~ | 1 | C. expression choice ~ | 0 | C interpreted covariates second type ASCs. include covariates type, add 0 respective part, e.g., choice ~ 0 | B | C. parts formula can omitted ambiguity. example, choice ~ equivalent choice ~ | 1 | 0. Multiple covariates one part separated + sign, e.g., choice ~ A1 + A2. Arithmetic transformations covariates three parts right-hand side possible via function (), e.g., choice ~ (A1^2 + A2 * 2). case, random effect can defined transformed covariate, e.g., random_effects = c(\"(A1^2 + A2 * 2)\" = \"cn\").","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define choice model formula — choice_formula","text":"","code":"choice_formula(   formula = choice ~ I(A^2 + 1) | B | I(log(C)),   error_term = \"probit\",   random_effects = c(\"I(A^2+1)\" = \"cn\", \"B\" = \"cn\") ) #>  #> ── Choice formula  #> • choice ~ I(A^2 + 1) | B | I(log(C)) #> • error term: probit #> • random effects: #>   • I(A^2+1): cn #>   • B: cn"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_identifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Define choice identifiers — choice_identifiers","title":"Define choice identifiers — choice_identifiers","text":"choice_identifiers object defines identifiers deciders choice occasions. generate_choice_identifiers() generates identifiers. extract_choice_identifiers() extracts choice identifiers.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_identifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define choice identifiers — choice_identifiers","text":"","code":"choice_identifiers(   data_frame,   format = \"wide\",   column_decider = \"deciderID\",   column_occasion = \"occasionID\",   cross_section = FALSE )  generate_choice_identifiers(   N = length(Tp),   Tp = 1,   column_decider = \"deciderID\",   column_occasion = \"occasionID\" )  extract_choice_identifiers(   x,   format = attr(x, \"format\"),   column_decider = attr(x, \"column_decider\"),   column_occasion = attr(x, \"column_occasion\"),   cross_section = attr(x, \"cross_section\") )"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_identifiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define choice identifiers — choice_identifiers","text":"data_frame [data.frame] Contains choice identifiers. format [character(1)] Either \"wide\" \"long\". long case, unique combinations column_decider column_occasion (present) used. column_decider [character(1)] name identifier column deciders. column_occasion [character(1) | NULL] name identifier column choice occasions (panel data). Can NULL cross-sectional case. cross_section [logical(1)] Treat choice data cross-sectional? N [integer(1)] number deciders. Tp [integer(1) | integer(N)] number choice occasions per decider. Can also length N variable number choice occasions per decider. x object class choice_data, choice_covariates, containing identifiers covariate values decider, occasion, alternative,","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_identifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define choice identifiers — choice_identifiers","text":"object class choice_identifiers, tibble columns: column_decider contains decider identifiers, column_occasion contains choice occasion identifiers (column_occasion NULL cross_section = FALSE).","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_identifiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define choice identifiers — choice_identifiers","text":"","code":"### panel case generate_choice_identifiers(N = 2, Tp = 2) #> # A tibble: 4 × 2 #>   deciderID occasionID #> * <chr>     <chr>      #> 1 1         1          #> 2 1         2          #> 3 2         1          #> 4 2         2           ### cross-sectional case generate_choice_identifiers(N = 5, column_occasion = NULL) #> # A tibble: 5 × 1 #>   deciderID #> * <chr>     #> 1 1         #> 2 2         #> 3 3         #> 4 4         #> 5 5          ### read choice identifiers choice_identifiers(   data_frame = travel_mode_choice,   format = \"long\",   column_decider = \"individual\",   column_occasion = NULL,   cross_section = TRUE ) #> # A tibble: 210 × 1 #>    individual #>  * <chr>      #>  1 1          #>  2 2          #>  3 3          #>  4 4          #>  5 5          #>  6 6          #>  7 7          #>  8 8          #>  9 9          #> 10 10         #> # ℹ 200 more rows"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Define and compute choice likelihood — choice_likelihood","title":"Define and compute choice likelihood — choice_likelihood","text":"functions prepare evaluate likelihood contribution observed choices given choice model. choice_likelihood() pre-computes design matrices choice indices implied choice_data choice_effects. returned object stores quantities repeated likelihood evaluations maximum likelihood estimation avoid redundant work. compute_choice_likelihood() evaluates (log-)likelihood given set choice_parameters. can either take original choice objects pre-computed choice_likelihood object.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define and compute choice likelihood — choice_likelihood","text":"","code":"choice_likelihood(   choice_data,   choice_effects,   choice_identifiers = extract_choice_identifiers(choice_data),   input_checks = TRUE,   lower_bound = 1e-10,   ... )  compute_choice_likelihood(   choice_parameters,   choice_data,   choice_effects,   logarithm = TRUE,   negative = FALSE,   lower_bound = 1e-10,   input_checks = TRUE,   ... )"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define and compute choice likelihood — choice_likelihood","text":"choice_data [choice_data] choice_data object observed choices. choice_effects [choice_effects] choice_effects object determines model effects. choice_identifiers [choice_identifiers] choice_identifiers object. default extracts identifiers choice_data. input_checks [logical(1)] Forwarded choiceprob_probit choiceprob_logit control additional input validation. lower_bound [numeric(1)] minimum probability used computing log-likelihood. Values bound truncated avoid taking logarithm zero. ... Additional arguments passed choiceprob_probit choiceprob_logit. choice_parameters [choice_parameters | list] choice_parameters object list returned switch_parameter_space. numeric vector optimization space supplied, converted via switch_parameter_space(). logarithm [logical(1)] Return log-likelihood? FALSE, likelihood returned. negative [logical(1)] Return negative (log-)likelihood? Useful minimization routines.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define and compute choice likelihood — choice_likelihood","text":"choice_likelihood() returns object class choice_likelihood, list containing design matrices, choice indices, identifiers. compute_choice_likelihood() returns single numeric value (negative) log-likelihood likelihood, depending logarithm negative.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_likelihood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define and compute choice likelihood — choice_likelihood","text":"","code":"data(train_choice)  choice_effects <- choice_effects(   choice_formula = choice_formula(     formula = choice ~ price | time,     error_term = \"probit\"   ),   choice_alternatives = choice_alternatives(     J = 2, alternatives = c(\"A\", \"B\")   ) )  choice_data <- choice_data(   data_frame = train_choice,   format = \"wide\",   column_choice = \"choice\",   column_decider = \"deciderID\",   column_occasion = \"occasionID\" )  likelihood <- choice_likelihood(   choice_data = choice_data,   choice_effects = choice_effects )  choice_parameters <- generate_choice_parameters(choice_effects)  compute_choice_likelihood(   choice_parameters = choice_parameters,   choice_data = likelihood,   choice_effects = choice_effects,   logarithm = TRUE ) #> [1] -32584.22"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Define choice model parameters — choice_parameters","title":"Define choice model parameters — choice_parameters","text":"functions construct, validate, transform object class choice_parameters, defines parameters choice model. choice_parameters() constructs choice_parameters object. generate_choice_parameters() samples parameters random, see details. validate_choice_parameters() validates choice_parameters object. switch_parameter_space() transforms choice_parameters object interpretation optimization space, see details.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define choice model parameters — choice_parameters","text":"","code":"choice_parameters(beta = NULL, Omega = NULL, Sigma = NULL, gamma = NULL)  generate_choice_parameters(   choice_effects,   fixed_parameters = choice_parameters() )  validate_choice_parameters(   choice_parameters,   choice_effects,   allow_missing = FALSE )  switch_parameter_space(choice_parameters, choice_effects)"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define choice model parameters — choice_parameters","text":"beta [numeric(P)] coefficient vector length P (number effects) computing linear--parameters systematic utility \\(V = X\\beta\\). Omega [matrix(nrow = P_r, ncol = P_r) | NULL] covariance matrix random effects dimension P_r times P_r, P_r \\(\\leq\\) P number random effects. Can NULL case P_r = 0. Sigma [matrix(nrow = J, ncol = J) | numeric(1)] relevant probit model. unordered alternatives covariance matrix dimension J times J (number alternatives) Gaussian error term \\(\\epsilon = U - V\\). ordered models reduces single variance term. gamma [numeric(J - 1) | NULL] Optional vector strictly increasing threshold parameters ordered models. first element must equal zero identification. Ignored unordered alternatives. choice_effects [choice_effects] choice_effects object describing utility specification. fixed_parameters [choice_parameters] Optionally choice_parameters object parameters keep fixed sampling parameters. choice_parameters [choice_parameters] choice_parameters object. allow_missing [logical(1)] parameters allowed missing (TRUE) must required elements present (FALSE)?","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define choice model parameters — choice_parameters","text":"object class choice_parameters, list elements: beta coefficient vector (). Omega covariance matrix random effects (). Sigma error term covariance matrix (variance ordered models). gamma Threshold parameters ordered models ().","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_parameters.html","id":"sampling-missing-choice-model-parameters","dir":"Reference","previous_headings":"","what":"Sampling missing choice model parameters","title":"Define choice model parameters — choice_parameters","text":"Unspecified choice model parameters (required) drawn independently following distributions: beta Drawn multivariate normal distribution zero mean diagonal covariance matrix value 10 diagonal. Omega Drawn Inverse-Wishart distribution degrees freedom equal P_r + 2 scale matrix equal identity. Sigma first row column fixed 0 level normalization. \\((2, 2)\\)-value fixed 1 scale normalization. lower right block drawn Inverse-Wishart distribution degrees freedom equal J + 1 scale matrix equal identity.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_parameters.html","id":"parameter-spaces","dir":"Reference","previous_headings":"","what":"Parameter spaces","title":"Define choice model parameters — choice_parameters","text":"switch_parameter_space() function transforms choice_parameters object interpretation optimization space. interpretation space list (necessarily identified) parameters can interpreted. optimization space numeric vector identified parameters can optimized: beta transformed first row column Sigma fixed 0 level normalization second diagonal element fixed 1 scale normalization covariance matrices (Omega Sigma) transformed vectorized Cholesky factor (diagonal fixed positive uniqueness)","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define choice model parameters — choice_parameters","text":"","code":"### generate choice parameters at random J <- 3 choice_effects <- choice_effects(   choice_formula = choice_formula(     formula = choice ~ A | B, error_term = \"probit\",     random_effects = c(\"A\" = \"cn\")   ),   choice_alternatives = choice_alternatives(J = J) ) choice_parameters <- generate_choice_parameters(   choice_effects = choice_effects,   fixed_parameters = choice_parameters(     Sigma = diag(c(0, rep(1, J - 1))) # scale and level normalization   ) )"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_preferences.html","id":null,"dir":"Reference","previous_headings":"","what":"Define choice preferences — choice_preferences","title":"Define choice preferences — choice_preferences","text":"choice_preferences object defines deciders' preferences choice model. choice_preferences() constructs choice_preferences object. generate_choice_preferences() samples choice preferences random.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_preferences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define choice preferences — choice_preferences","text":"","code":"choice_preferences(data_frame, column_decider = colnames(data_frame)[1])  generate_choice_preferences(   choice_effects,   choice_parameters = NULL,   choice_identifiers = generate_choice_identifiers(N = 100) )"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_preferences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define choice preferences — choice_preferences","text":"data_frame [data.frame] Contains deciders' preferences. column_decider [character(1) | NULL] column name data_frame decider identifiers. NULL, decider identifiers generated. choice_effects [choice_effects] choice_effects object. choice_parameters [choice_parameters] choice_parameters object. choice_identifiers [choice_identifiers] choice_identifiers object.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_preferences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define choice preferences — choice_preferences","text":"object class choice_preferences, data.frame deciders' preferences. column names names effects choice model. first column contains decider identifiers.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_preferences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define choice preferences — choice_preferences","text":"","code":"### generate choice preferences from choice parameters and effects choice_effects <- choice_effects(   choice_formula = choice_formula(     formula = choice ~ price | income | comfort,     error_term = \"probit\",     random_effects = c(       \"price\" = \"cn\",       \"income\" = \"cn\"     )   ),   choice_alternatives = choice_alternatives(J = 3) )  choice_parameters <- generate_choice_parameters(   choice_effects = choice_effects )  ids <- generate_choice_identifiers(N = 4)  (choice_preferences <- generate_choice_preferences(   choice_parameters = choice_parameters,   choice_effects = choice_effects,   choice_identifiers = ids )) #>   deciderID     ASC_B     ASC_C comfort_A comfort_B comfort_C     price #> 1         1 -3.355917 -1.709963 -2.261676 -0.565795 0.5216818 -2.585067 #> 2         2 -3.355917 -1.709963 -2.261676 -0.565795 0.5216818 -2.490591 #> 3         3 -3.355917 -1.709963 -2.261676 -0.565795 0.5216818 -2.206151 #> 4         4 -3.355917 -1.709963 -2.261676 -0.565795 0.5216818 -1.570579 #>    income_B  income_C #> 1 -2.219161 -2.225161 #> 2 -2.159966 -2.114323 #> 3 -2.042560 -1.284947 #> 4 -1.984565 -1.070331  ### inspect decider-specific preference vectors head(choice_preferences) #>   deciderID     ASC_B     ASC_C comfort_A comfort_B comfort_C     price #> 1         1 -3.355917 -1.709963 -2.261676 -0.565795 0.5216818 -2.585067 #> 2         2 -3.355917 -1.709963 -2.261676 -0.565795 0.5216818 -2.490591 #> 3         3 -3.355917 -1.709963 -2.261676 -0.565795 0.5216818 -2.206151 #> 4         4 -3.355917 -1.709963 -2.261676 -0.565795 0.5216818 -1.570579 #>    income_B  income_C #> 1 -2.219161 -2.225161 #> 2 -2.159966 -2.114323 #> 3 -2.042560 -1.284947 #> 4 -1.984565 -1.070331"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_probabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Define choice probabilities — choice_probabilities","title":"Define choice probabilities — choice_probabilities","text":"choice_probabilities object defines choice probabilities. compute_choice_probabilities() calculates choice probabilities based choice parameters choice data.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_probabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define choice probabilities — choice_probabilities","text":"","code":"choice_probabilities(   data_frame,   choice_only = TRUE,   column_decider = \"deciderID\",   column_occasion = NULL,   cross_section = FALSE,   column_probabilities = if (choice_only) \"choice_probability\" )  compute_choice_probabilities(   choice_parameters,   choice_data,   choice_effects,   choice_only = FALSE,   input_checks = TRUE,   ... )"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_probabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define choice probabilities — choice_probabilities","text":"data_frame [data.frame] Contains choice probabilities. choice_only [logical(1)] probabilities chosen alternatives? column_decider [character(1)] name identifier column deciders. column_occasion [character(1) | NULL] name identifier column choice occasions (panel data). Can NULL cross-sectional case. cross_section [logical(1)] Treat choice data cross-sectional? column_probabilities [character()] column name data_frame choice probabilities choice alternatives. choice_only = TRUE, name single column contains probabilities chosen alternatives. choice_parameters [choice_parameters | list] Either choice_parameters object list optimization space returned switch_parameter_space. choice_data [choice_data] choice_data object providing responses covariates. choice_effects [choice_effects] choice_effects object defining specification. input_checks [logical(1)] additional internal input checks performed computing probabilities? ... Passed underlying probability computation routine.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_probabilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define choice probabilities — choice_probabilities","text":"choice_probabilities S3 object (data frame) stores additional metadata attributes column_probabilities, choice_only, identifier columns. attributes used downstream helpers reconstruct original structure.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_probabilities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define choice probabilities — choice_probabilities","text":"","code":"data(train_choice) choice_effects <- choice_effects(   choice_formula = choice_formula(     formula = choice ~ price | time,     error_term = \"probit\"   ),   choice_alternatives = choice_alternatives(J = 2, alternatives = c(\"A\", \"B\")) ) choice_parameters <- generate_choice_parameters(choice_effects) choice_data <- choice_data(   data_frame = train_choice,   format = \"wide\",   column_choice = \"choice\",   column_decider = \"deciderID\",   column_occasion = \"occasionID\" ) compute_choice_probabilities(   choice_parameters = choice_parameters,   choice_data = choice_data,   choice_effects = choice_effects,   choice_only = TRUE ) #>      deciderID occasionID choice_probability #> 1            1          1       1.000000e+00 #> 2            1          2       1.000000e+00 #> 3            1          3       1.000000e+00 #> 4            1          4       1.000000e+00 #> 5            1          5      2.141739e-160 #> 6            1          6       1.000000e+00 #> 7            1          7      1.861185e-157 #> 8            1          8      2.141739e-160 #> 9            1          9      1.757396e-222 #> 10           1         10       1.000000e+00 #> 11           2          1       1.000000e+00 #> 12           2          2       1.000000e+00 #> 13           2          3       9.971753e-01 #> 14           2          4       1.000000e+00 #> 15           2          5       1.000000e+00 #> 16           2          6       1.000000e+00 #> 17           2          7       1.000000e+00 #> 18           2          8       1.000000e+00 #> 19           2          9       1.000000e+00 #> 20           2         10       3.912431e-03 #> 21           2         11       5.144014e-03 #> 22           3          1       1.000000e+00 #> 23           3          2       1.000000e+00 #> 24           3          3       1.000000e+00 #> 25           3          4       1.000000e+00 #> 26           3          5       1.000000e+00 #> 27           3          6       1.000000e+00 #> 28           3          7       3.017448e-03 #> 29           3          8       1.000000e+00 #> 30           3          9       5.144014e-03 #> 31           3         10       5.144014e-03 #> 32           3         11       1.173796e-90 #> 33           4          1       9.976362e-01 #> 34           4          2       2.951922e-03 #> 35           4          3       7.269760e-13 #> 36           4          4       7.083597e-30 #> 37           4          5       1.000000e+00 #> 38           4          6       9.569711e-01 #> 39           4          7       1.000000e+00 #> 40           4          8       6.259689e-02 #> 41           4          9       3.580234e-09 #> 42           4         10       1.000000e+00 #> 43           4         11       1.000000e+00 #> 44           4         12       2.682366e-12 #> 45           4         13       9.499756e-01 #> 46           4         14       7.269760e-13 #> 47           4         15       9.176483e-01 #> 48           5          1       1.000000e+00 #> 49           5          2       5.251711e-03 #> 50           5          3      2.083425e-175 #> 51           5          4       1.000000e+00 #> 52           5          5       9.972370e-01 #> 53           5          6       1.000000e+00 #> 54           5          7       0.000000e+00 #> 55           5          8       0.000000e+00 #> 56           5          9       0.000000e+00 #> 57           5         10      9.821902e-177 #> 58           5         11       1.000000e+00 #> 59           5         12      9.821902e-177 #> 60           5         13       1.000000e+00 #> 61           5         14       3.829656e-03 #> 62           5         15      9.821902e-177 #> 63           6          1       1.000000e+00 #> 64           6          2       1.000000e+00 #> 65           6          4       1.000000e+00 #> 66           6          5      2.496662e-152 #> 67           6          6      1.730414e-211 #> 68           6          7       0.000000e+00 #> 69           6          8       7.564357e-03 #> 70           6          9       0.000000e+00 #> 71           6         10       1.000000e+00 #> 72           7          1       1.000000e+00 #> 73           7          2       1.000000e+00 #> 74           7          3       1.000000e+00 #> 75           7          4       1.000000e+00 #> 76           7          5       1.000000e+00 #> 77           7          6       1.000000e+00 #> 78           7          7       5.586937e-03 #> 79           7          8       9.924356e-01 #> 80           8          1       1.000000e+00 #> 81           8          2       1.000000e+00 #> 82           8          3       1.000000e+00 #> 83           8          4       0.000000e+00 #> 84           8          5       0.000000e+00 #> 85           8          6       1.000000e+00 #> 86           8          7       1.000000e+00 #> 87           8          8       1.000000e+00 #> 88           9          1       1.000000e+00 #> 89           9          2       0.000000e+00 #> 90           9          3      1.451056e-139 #> 91           9          4       0.000000e+00 #> 92           9          5      4.955840e-100 #> 93           9          6       1.043319e-98 #> 94           9          7      5.366816e-138 #> 95           9          8       1.000000e+00 #> 96           9          9       1.000000e+00 #> 97           9         10       1.000000e+00 #> 98           9         11      4.754774e-136 #> 99           9         12       4.365639e-02 #> 100         10          1       1.000000e+00 #> 101         10          2      7.485939e-274 #> 102         10          3       1.000000e+00 #> 103         10          4       0.000000e+00 #> 104         10          5       1.000000e+00 #> 105         10          6       2.762966e-03 #> 106         10          7       1.000000e+00 #> 107         10          8       1.000000e+00 #> 108         10          9       9.957402e-01 #> 109         10         10       9.972370e-01 #> 110         10         11       1.000000e+00 #> 111         10         12       1.000000e+00 #> 112         11          1       1.000000e+00 #> 113         11          3       7.125586e-03 #> 114         11          4       1.000000e+00 #> 115         11          6      7.185990e-225 #> 116         11          7       1.000000e+00 #> 117         11          9      2.455871e-162 #> 118         11         10       3.187833e-66 #> 119         12          1       7.564357e-03 #> 120         12          2       9.924356e-01 #> 121         12          3       9.924356e-01 #> 122         12          4       9.949617e-01 #> 123         12          5      2.731664e-137 #> 124         12          6      6.306762e-197 #> 125         12          7       1.000000e+00 #> 126         12          8       1.000000e+00 #> 127         12          9       1.000000e+00 #> 128         12         10       1.000000e+00 #> 129         12         11       1.000000e+00 #> 130         12         12       9.949617e-01 #> 131         12         13       1.000000e+00 #> 132         12         14       1.000000e+00 #> 133         13          1       9.967071e-01 #> 134         13          2       1.000000e+00 #> 135         13          3       1.000000e+00 #> 136         13          4       1.000000e+00 #> 137         13          5       1.000000e+00 #> 138         13          6       9.954619e-01 #> 139         13          7       1.000000e+00 #> 140         13          8       9.954619e-01 #> 141         13          9       1.000000e+00 #> 142         13         10       1.000000e+00 #> 143         13         11       1.000000e+00 #> 144         13         12       1.000000e+00 #> 145         13         13       9.967071e-01 #> 146         13         14       9.954619e-01 #> 147         14          1       9.938120e-01 #> 148         14          2       6.188020e-03 #> 149         14          3       1.000000e+00 #> 150         14          4      1.682338e-141 #> 151         14          5       1.000000e+00 #> 152         14          6       1.000000e+00 #> 153         14          7       1.000000e+00 #> 154         14          8       7.798351e-93 #> 155         14          9      1.682338e-141 #> 156         14         10       8.527293e-94 #> 157         14         11       1.000000e+00 #> 158         14         12       1.000000e+00 #> 159         14         13       9.938120e-01 #> 160         14         14       1.000000e+00 #> 161         15          1       1.000000e+00 #> 162         15          2       1.000000e+00 #> 163         15          3       1.000000e+00 #> 164         15          4       1.000000e+00 #> 165         15          5       9.970481e-01 #> 166         15          6       9.963312e-01 #> 167         15          7       1.000000e+00 #> 168         15          8       9.963312e-01 #> 169         15          9       1.000000e+00 #> 170         15         10      3.193347e-263 #> 171         16          1       1.000000e+00 #> 172         16          2       0.000000e+00 #> 173         16          3       4.828094e-65 #> 174         16          4       1.000000e+00 #> 175         16          5       9.877564e-01 #> 176         16          6       1.224356e-02 #> 177         16          7       1.000000e+00 #> 178         16          8      2.151747e-101 #> 179         16          9       1.000000e+00 #> 180         16         10       1.000000e+00 #> 181         17          1       1.000000e+00 #> 182         17          2       9.967071e-01 #> 183         17          3       1.000000e+00 #> 184         17          4       1.000000e+00 #> 185         17          5       1.000000e+00 #> 186         17          6       1.000000e+00 #> 187         17          7       1.000000e+00 #> 188         17          8       1.000000e+00 #> 189         17          9       1.000000e+00 #> 190         17         10       1.000000e+00 #> 191         17         11       9.967071e-01 #> 192         17         12       1.000000e+00 #> 193         17         13       9.959172e-01 #> 194         17         14       1.000000e+00 #> 195         17         15       4.082806e-03 #> 196         18          1       1.000000e+00 #> 197         18          2       1.000000e+00 #> 198         18          3       7.564357e-03 #> 199         18          4       1.000000e+00 #> 200         18          5       1.000000e+00 #> 201         18          6      2.709415e-158 #> 202         18          7       4.050172e-34 #> 203         18          8       9.924356e-01 #> 204         18          9       1.000000e+00 #> 205         18         10       1.059373e-64 #> 206         18         11       1.000000e+00 #> 207         18         12       1.059373e-64 #> 208         18         13       1.000000e+00 #> 209         19          1       1.000000e+00 #> 210         19          2       1.552207e-16 #> 211         19          3       3.668799e-03 #> 212         19          4       7.126075e-43 #> 213         19          5       7.126075e-43 #> 214         19          6       2.951922e-03 #> 215         19          7       9.970481e-01 #> 216         19          8       9.753709e-44 #> 217         19          9       1.000000e+00 #> 218         19         10       1.000000e+00 #> 219         19         11       1.000000e+00 #> 220         20          1       1.000000e+00 #> 221         20          2       4.082806e-03 #> 222         20          3       1.827766e-72 #> 223         20          4       1.624546e-37 #> 224         20          5       1.000000e+00 #> 225         20          6       5.038287e-03 #> 226         20          7       1.624546e-37 #> 227         20          8       6.446715e-37 #> 228         20          9       9.959172e-01 #> 229         20         10      2.880470e-244 #> 230         20         11      2.164431e-175 #> 231         21          1       9.944131e-01 #> 232         21          2       9.944131e-01 #> 233         21          3       9.907965e-01 #> 234         21          4       1.000000e+00 #> 235         21          5       1.000000e+00 #> 236         21          6       1.000000e+00 #> 237         21          7       9.907965e-01 #> 238         21          8       1.000000e+00 #> 239         21          9       1.000000e+00 #> 240         21         10       1.000000e+00 #> 241         21         11       1.000000e+00 #> 242         21         12       9.931543e-01 #> 243         21         13       1.000000e+00 #> 244         22          1       1.000000e+00 #> 245         22          2       1.000000e+00 #> 246         22          4       9.954619e-01 #> 247         22          5       6.188020e-03 #> 248         22          6      4.639501e-261 #> 249         22          7       9.954619e-01 #> 250         22          8       9.924356e-01 #> 251         22          9       1.000000e+00 #> 252         22         10      2.478217e-193 #> 253         23          1       9.967071e-01 #> 254         23          2       1.000000e+00 #> 255         23          3       1.000000e+00 #> 256         23          4       9.973569e-01 #> 257         23          5       1.000000e+00 #> 258         23          6       9.959172e-01 #> 259         23          7       9.959172e-01 #> 260         23          8       1.000000e+00 #> 261         23          9       9.973569e-01 #> 262         23         10       1.000000e+00 #> 263         23         11       1.000000e+00 #> 264         23         12       1.000000e+00 #> 265         23         13       1.000000e+00 #> 266         24          1       1.000000e+00 #> 267         24          2       5.513604e-33 #> 268         24          3       5.513604e-33 #> 269         24          4       3.668799e-03 #> 270         24          5       5.513604e-33 #> 271         24          6       5.513604e-33 #> 272         24          7      1.271916e-156 #> 273         24          8       1.000000e+00 #> 274         24          9       1.000000e+00 #> 275         25          1       1.000000e+00 #> 276         25          2       1.000000e+00 #> 277         25          3       4.332026e-53 #> 278         25          4      2.913369e-174 #> 279         25          5      8.441166e-118 #> 280         25          6       9.954619e-01 #> 281         25          7      5.015740e-176 #> 282         25          8       8.283561e-25 #> 283         25          9       4.538143e-03 #> 284         25         10       2.506931e-24 #> 285         25         11       1.000000e+00 #> 286         25         12       4.332026e-53 #> 287         26          1       1.000000e+00 #> 288         26          2       8.283561e-25 #> 289         26          3       1.000000e+00 #> 290         26          4       8.283561e-25 #> 291         26          5       8.283561e-25 #> 292         26          6       5.586937e-03 #> 293         26          7       4.703778e-54 #> 294         26          8       9.944131e-01 #> 295         26          9       1.000000e+00 #> 296         26         10       1.000000e+00 #> 297         26         11       1.538033e-54 #> 298         27          1       1.000000e+00 #> 299         27          2       1.000000e+00 #> 300         27          3       1.000000e+00 #> 301         27          4       1.000000e+00 #> 302         27          5       4.864936e-74 #> 303         27          6       1.000000e+00 #> 304         27          7       1.000000e+00 #> 305         27          8       1.000000e+00 #> 306         27          9       5.586937e-03 #> 307         27         10       9.907965e-01 #> 308         27         11       9.203454e-03 #> 309         27         12      3.684439e-116 #> 310         27         13       9.924356e-01 #> 311         27         14       1.000000e+00 #> 312         28          1       1.000000e+00 #> 313         28          2       4.245581e-27 #> 314         28          3       5.361410e-03 #> 315         28          4       3.401315e-58 #> 316         28          5       1.000000e+00 #> 317         28          6       1.000000e+00 #> 318         28          7       1.000000e+00 #> 319         28          8       9.960876e-01 #> 320         28          9       1.749492e-28 #> 321         28         10       4.245581e-27 #> 322         28         11       1.000000e+00 #> 323         28         12       1.000000e+00 #> 324         28         13       1.000000e+00 #> 325         28         14       9.960876e-01 #> 326         28         15       5.762027e-28 #> 327         28         16       1.000000e+00 #> 328         28         17       1.000000e+00 #> 329         29          1       1.000000e+00 #> 330         29          2       9.949617e-01 #> 331         29          3       1.000000e+00 #> 332         29          5       1.000000e+00 #> 333         29          6       1.000000e+00 #> 334         29          7       7.522335e-53 #> 335         29          8       1.538033e-54 #> 336         29          9       1.000000e+00 #> 337         29         10       1.000000e+00 #> 338         29         11       1.000000e+00 #> 339         29         12       9.963312e-01 #> 340         29         14       9.949617e-01 #> 341         30          1       1.000000e+00 #> 342         30          2       1.000000e+00 #> 343         30          3       1.000000e+00 #> 344         30          4       1.000000e+00 #> 345         30          5       1.000000e+00 #> 346         30          6       1.000000e+00 #> 347         30          7       1.000000e+00 #> 348         30          8       1.000000e+00 #> 349         30          9       1.000000e+00 #> 350         30         10       6.845694e-03 #> 351         30         11       1.000000e+00 #> 352         30         12       9.907965e-01 #> 353         30         13       5.586937e-03 #> 354         30         14       1.000000e+00 #> 355         30         15       9.907965e-01 #> 356         31          1       1.000000e+00 #> 357         31          2       1.224356e-02 #> 358         31          3       1.000000e+00 #> 359         31          4       1.000000e+00 #> 360         31          5       8.348648e-03 #> 361         31          6       9.838819e-01 #> 362         31          7       1.000000e+00 #> 363         31          8       5.816784e-04 #> 364         31          9       1.000000e+00 #> 365         31         10       1.000000e+00 #> 366         31         11       1.224356e-02 #> 367         31         12       1.000000e+00 #> 368         32          1       1.000000e+00 #> 369         32          2       3.409529e-70 #> 370         32          3       3.084282e-03 #> 371         32          4       5.002173e-71 #> 372         32          5       1.000000e+00 #> 373         32          6       0.000000e+00 #> 374         32          7      2.027201e-117 #> 375         32          8       1.000000e+00 #> 376         32          9       3.084282e-03 #> 377         32         10      2.027201e-117 #> 378         32         11      2.824610e-315 #> 379         32         12      2.027201e-117 #> 380         32         13       9.969157e-01 #> 381         32         14       1.000000e+00 #> 382         33          1       1.000000e+00 #> 383         33          2       5.586937e-03 #> 384         33          3       4.538143e-03 #> 385         33          4       6.843573e-60 #> 386         33          5       1.000000e+00 #> 387         33          6       1.000000e+00 #> 388         33          7       1.000000e+00 #> 389         33          8       1.000000e+00 #> 390         33          9       7.564357e-03 #> 391         33         10       1.000000e+00 #> 392         33         11       1.000000e+00 #> 393         33         12       1.000000e+00 #> 394         33         13       1.000000e+00 #> 395         33         14       1.000000e+00 #> 396         34          1       9.970481e-01 #> 397         34          2       1.000000e+00 #> 398         34          3       9.963312e-01 #> 399         34          4       1.000000e+00 #> 400         34          5       1.000000e+00 #> 401         34          6       9.970481e-01 #> 402         34          7       1.000000e+00 #> 403         34          8       1.000000e+00 #> 404         34          9       1.000000e+00 #> 405         34         10       1.000000e+00 #> 406         34         11       1.000000e+00 #> 407         34         12       9.963312e-01 #> 408         35          1       1.000000e+00 #> 409         35          2       1.000000e+00 #> 410         35          3       1.000000e+00 #> 411         35          4       9.949617e-01 #> 412         35          5       1.000000e+00 #> 413         35          6       1.000000e+00 #> 414         35          7       9.898661e-01 #> 415         35          8       1.000000e+00 #> 416         35         10       1.000000e+00 #> 417         35         11      7.105804e-158 #> 418         35         12      7.105804e-158 #> 419         35         13      8.103277e-161 #> 420         35         14       9.931543e-01 #> 421         35         15       1.000000e+00 #> 422         36          1       1.000000e+00 #> 423         36          2       1.000000e+00 #> 424         36          3       1.000000e+00 #> 425         36          4       1.000000e+00 #> 426         36          5       9.924356e-01 #> 427         36          6       1.000000e+00 #> 428         36          7       1.000000e+00 #> 429         36          8       9.907965e-01 #> 430         36          9       1.000000e+00 #> 431         36         10       1.000000e+00 #> 432         36         11       1.000000e+00 #> 433         36         12       1.000000e+00 #> 434         36         13       9.203454e-03 #> 435         36         14       1.000000e+00 #> 436         36         15       9.907965e-01 #> 437         37          1       2.288213e-02 #> 438         37          2       1.000000e+00 #> 439         37          3       1.000000e+00 #> 440         37          4       1.000000e+00 #> 441         37          5       9.852763e-01 #> 442         37          6       1.000000e+00 #> 443         37          7       1.000000e+00 #> 444         37          8       1.000000e+00 #> 445         37          9       1.000000e+00 #> 446         37         10       2.288213e-02 #> 447         37         11       9.852763e-01 #> 448         37         12       9.916514e-01 #> 449         37         13       1.000000e+00 #> 450         37         14       1.000000e+00 #> 451         37         15       9.916514e-01 #> 452         37         16       1.000000e+00 #> 453         38          1       1.000000e+00 #> 454         38          2       0.000000e+00 #> 455         38          3       1.000000e+00 #> 456         38          4       0.000000e+00 #> 457         38          5       1.188714e-65 #> 458         38          6       9.967071e-01 #> 459         38          7      1.783984e-112 #> 460         38          8      1.014193e-110 #> 461         38          9       0.000000e+00 #> 462         38         10       9.959172e-01 #> 463         38         11       1.000000e+00 #> 464         38         12      1.014193e-110 #> 465         39          1       1.000000e+00 #> 466         39          2       0.000000e+00 #> 467         39          3       1.000000e+00 #> 468         39          4       1.000000e+00 #> 469         39          5      2.778975e-222 #> 470         39          6       6.444058e-03 #> 471         39          7       5.251711e-03 #> 472         39          8       1.000000e+00 #> 473         39          9       1.000000e+00 #> 474         39         10       1.000000e+00 #> 475         39         11       1.000000e+00 #> 476         39         12       1.000000e+00 #> 477         39         13       1.000000e+00 #> 478         39         14       9.961703e-01 #> 479         39         15       1.000000e+00 #> 480         40          1       1.000000e+00 #> 481         40          2       1.000000e+00 #> 482         40          3       9.907965e-01 #> 483         40          4       1.224356e-02 #> 484         40          5       1.000000e+00 #> 485         40          6       1.000000e+00 #> 486         40          7       1.000000e+00 #> 487         40          8      7.652516e-205 #> 488         40          9      3.227124e-272 #> 489         40         10       1.000000e+00 #> 490         40         11       1.000000e+00 #> 491         40         12       1.224356e-02 #> 492         40         13       1.000000e+00 #> 493         41          1       9.203454e-03 #> 494         41          2       6.188020e-03 #> 495         41          3       1.000000e+00 #> 496         41          4       1.000000e+00 #> 497         41          5      9.510819e-133 #> 498         41          6      3.212424e-131 #> 499         41          7       9.203454e-03 #> 500         41          8      3.212424e-131 #> 501         41          9       1.000000e+00 #> 502         41         10       1.000000e+00 #> 503         41         11      3.212424e-131 #> 504         41         12       9.907965e-01 #> 505         41         13       4.191726e-86 #> 506         41         14      6.696751e-134 #> 507         41         15       1.000000e+00 #> 508         41         16       0.000000e+00 #> 509         41         17       9.203454e-03 #> 510         41         18       7.046675e-85 #> 511         41         19       1.000000e+00 #> 512         42          1       1.000000e+00 #> 513         42          2       1.000000e+00 #> 514         42          3       1.000000e+00 #> 515         42          4       1.000000e+00 #> 516         42          5       1.000000e+00 #> 517         42          6       3.668799e-03 #> 518         42          7       1.000000e+00 #> 519         42          8       1.000000e+00 #> 520         42          9       1.000000e+00 #> 521         42         10       2.951922e-03 #> 522         42         11       1.000000e+00 #> 523         42         12       9.954619e-01 #> 524         43          1       1.000000e+00 #> 525         43          2       1.000000e+00 #> 526         43          3       5.978065e-26 #> 527         43          4      6.843025e-170 #> 528         43          5       1.000000e+00 #> 529         43          7       1.000000e+00 #> 530         43          8       1.293977e-26 #> 531         43          9       9.907965e-01 #> 532         43         10       5.978065e-26 #> 533         43         12       5.978065e-26 #> 534         44          1       1.000000e+00 #> 535         44          2       0.000000e+00 #> 536         44          3       9.931543e-01 #> 537         44          4       1.343428e-02 #> 538         44          5       1.000000e+00 #> 539         44          6       1.000000e+00 #> 540         44          7      3.956049e-194 #> 541         44          8       9.907965e-01 #> 542         44          9       1.000000e+00 #> 543         44         10       9.907965e-01 #> 544         44         11      1.837776e-138 #> 545         44         12       1.000000e+00 #> 546         44         13       1.000000e+00 #> 547         44         14       1.000000e+00 #> 548         45          1       1.000000e+00 #> 549         45          2       1.000000e+00 #> 550         45          3       1.000000e+00 #> 551         45          4       1.000000e+00 #> 552         45          5       1.000000e+00 #> 553         45          6       1.000000e+00 #> 554         45          7       1.000000e+00 #> 555         45          8       1.000000e+00 #> 556         45          9       1.000000e+00 #> 557         45         10       9.970481e-01 #> 558         45         11       1.000000e+00 #> 559         45         12       9.978885e-01 #> 560         45         13       1.000000e+00 #> 561         45         14       1.000000e+00 #> 562         45         15       1.000000e+00 #> 563         46          1       9.967071e-01 #> 564         46          2       1.000000e+00 #> 565         46          3       1.000000e+00 #> 566         46          4       1.000000e+00 #> 567         46          5       1.865134e-54 #> 568         46          6       1.865134e-54 #> 569         46          7       5.586937e-03 #> 570         46          8       1.000000e+00 #> 571         46          9       1.000000e+00 #> 572         46         10       1.000000e+00 #> 573         46         11       1.000000e+00 #> 574         46         12       1.000000e+00 #> 575         46         13       9.967071e-01 #> 576         46         14       5.699089e-54 #> 577         46         15       1.000000e+00 #> 578         46         16       5.586937e-03 #> 579         46         17       1.000000e+00 #> 580         47          1       1.000000e+00 #> 581         47          2       1.000000e+00 #> 582         47          3      1.760751e-226 #> 583         47          4       1.000000e+00 #> 584         47          5       1.000000e+00 #> 585         47          6       1.000000e+00 #> 586         47          7       9.983213e-01 #> 587         47          8       1.000000e+00 #> 588         47          9       1.000000e+00 #> 589         47         10       9.978885e-01 #> 590         47         11       1.000000e+00 #> 591         47         12       1.000000e+00 #> 592         47         13       9.978885e-01 #> 593         47         14       1.000000e+00 #> 594         48          1       1.000000e+00 #> 595         48          2       9.967071e-01 #> 596         48          3       6.845694e-03 #> 597         48          4       4.894734e-66 #> 598         48          5       1.000000e+00 #> 599         48          6       1.000000e+00 #> 600         48          7       1.000000e+00 #> 601         48          8       1.000000e+00 #> 602         48         10       1.000000e+00 #> 603         48         11       1.000000e+00 #> 604         49          1       1.000000e+00 #> 605         49          2       1.000000e+00 #> 606         49          3       1.000000e+00 #> 607         49          4       1.000000e+00 #> 608         49          5       1.000000e+00 #> 609         49          6       1.000000e+00 #> 610         49          7       1.000000e+00 #> 611         49          8       9.978885e-01 #> 612         49          9       1.000000e+00 #> 613         49         10       9.978885e-01 #> 614         49         11       3.668799e-03 #> 615         49         12       1.000000e+00 #> 616         49         13       1.000000e+00 #> 617         50          1       9.999995e-01 #> 618         50          2       1.715302e-22 #> 619         50          3       9.076398e-66 #> 620         50          4       1.000000e+00 #> 621         50          5       1.000000e+00 #> 622         50          6       1.000000e+00 #> 623         50          7       7.564357e-03 #> 624         50          8       1.000000e+00 #> 625         50          9       3.310619e-07 #> 626         50         10       9.924356e-01 #> 627         50         11       8.245163e-07 #> 628         50         12       9.999995e-01 #> 629         50         13       9.944131e-01 #> 630         51          1       1.000000e+00 #> 631         51          2       0.000000e+00 #> 632         51          3      1.075604e-276 #> 633         51          4       9.907965e-01 #> 634         51          5       6.845694e-03 #> 635         51          6       1.000000e+00 #> 636         51          7       9.907965e-01 #> 637         51          8      4.883152e-280 #> 638         51          9      1.075604e-276 #> 639         51         10       0.000000e+00 #> 640         51         11      1.075604e-276 #> 641         51         12      7.645830e-206 #> 642         51         13       1.000000e+00 #> 643         51         14       0.000000e+00 #> 644         52          1       9.954619e-01 #> 645         52          2       9.850246e-01 #> 646         52          3       5.374292e-04 #> 647         52          4       1.031614e-02 #> 648         52          5       9.896839e-01 #> 649         52          6       9.988466e-01 #> 650         52          7       1.245831e-02 #> 651         52          8       1.843978e-03 #> 652         52          9       9.944131e-01 #> 653         52         10       5.586937e-03 #> 654         53          1       1.000000e+00 #> 655         53          2       0.000000e+00 #> 656         53          3       9.954619e-01 #> 657         53          4       1.000000e+00 #> 658         53          5       5.771527e-84 #> 659         53          6       1.871782e-82 #> 660         53          7       1.000000e+00 #> 661         53          8      6.696751e-134 #> 662         53          9      7.835207e-136 #> 663         54          1       1.000000e+00 #> 664         54          2       1.000000e+00 #> 665         54          3       1.927517e-03 #> 666         54          4       2.417448e-03 #> 667         54          5       1.000000e+00 #> 668         54          6       1.000000e+00 #> 669         54          7       1.000000e+00 #> 670         54          8       1.000000e+00 #> 671         54          9       1.000000e+00 #> 672         54         10       1.000000e+00 #> 673         54         11       9.980725e-01 #> 674         54         12       1.000000e+00 #> 675         54         13       1.000000e+00 #> 676         54         14       9.966349e-01 #> 677         54         15       1.000000e+00 #> 678         54         16       9.980725e-01 #> 679         55          1       1.000000e+00 #> 680         55          2       1.000000e+00 #> 681         55          3      3.480118e-242 #> 682         55          4       6.188020e-03 #> 683         55          5      3.480118e-242 #> 684         55          6       0.000000e+00 #> 685         55          7       1.000000e+00 #> 686         55          8       1.000000e+00 #> 687         55          9       1.000000e+00 #> 688         56          1       1.000000e+00 #> 689         56          2      3.956049e-194 #> 690         56          3       1.000000e+00 #> 691         56          4       1.000000e+00 #> 692         56          5      5.426721e-196 #> 693         56          6       1.000000e+00 #> 694         56          7       1.000000e+00 #> 695         56          8       1.000000e+00 #> 696         56          9       1.000000e+00 #> 697         56         10       9.907965e-01 #> 698         56         11       1.762427e-02 #> 699         56         12      3.233468e-141 #> 700         56         13      2.092651e-142 #> 701         57          1       1.000000e+00 #> 702         57          2      4.669906e-203 #> 703         57          3       1.000000e+00 #> 704         57          4      2.391996e-135 #> 705         57          5       1.000000e+00 #> 706         57          6       1.000000e+00 #> 707         57          7       1.000000e+00 #> 708         57          8       1.000000e+00 #> 709         58          1       1.000000e+00 #> 710         58          2      6.796975e-206 #> 711         58          4       1.000000e+00 #> 712         58          5      1.886015e-209 #> 713         58          6       1.000000e+00 #> 714         58          7       1.000000e+00 #> 715         58          8       1.700799e-02 #> 716         58          9       1.000000e+00 #> 717         58         10       9.882065e-01 #> 718         58         11       1.000000e+00 #> 719         58         12       1.000000e+00 #> 720         59          1       1.343428e-02 #> 721         59          2       1.343428e-02 #> 722         59          3       1.343428e-02 #> 723         59          4       1.000000e+00 #> 724         59          5       2.263646e-78 #> 725         59          6       1.000000e+00 #> 726         59          7       1.000000e+00 #> 727         59          8       8.348648e-03 #> 728         60          1       1.000000e+00 #> 729         60          2       9.944131e-01 #> 730         60          3       1.000000e+00 #> 731         60          4       1.000000e+00 #> 732         60          5       1.000000e+00 #> 733         60          6       1.000000e+00 #> 734         60          7       1.000000e+00 #> 735         60          8       1.000000e+00 #> 736         60          9       1.000000e+00 #> 737         60         10       1.000000e+00 #> 738         60         11       9.959172e-01 #> 739         60         12       1.000000e+00 #> 740         60         13       5.586937e-03 #> 741         60         14       9.944131e-01 #> 742         61          1       1.000000e+00 #> 743         61          2       2.463333e-75 #> 744         61          3       1.000000e+00 #> 745         61          4       1.000000e+00 #> 746         61          5       1.000000e+00 #> 747         61          6       9.976362e-01 #> 748         61          7       1.000000e+00 #> 749         61          8       9.976362e-01 #> 750         61          9       1.000000e+00 #> 751         61         10       9.970481e-01 #> 752         62          1       1.000000e+00 #> 753         62          2       3.561897e-61 #> 754         62          3       6.439923e-29 #> 755         62          4       1.166278e-60 #> 756         62          5       9.967071e-01 #> 757         62          6      1.640757e-136 #> 758         62          7       9.959172e-01 #> 759         62          8       1.000000e+00 #> 760         62          9       9.959172e-01 #> 761         62         10       1.000000e+00 #> 762         62         11       3.292857e-03 #> 763         62         12      8.386995e-199 #> 764         62         13      9.804292e-136 #> 765         62         14       1.000000e+00 #> 766         62         15       1.000000e+00 #> 767         63          1       1.000000e+00 #> 768         63          2       1.000000e+00 #> 769         63          3       1.000000e+00 #> 770         63          4       1.000000e+00 #> 771         63          5       1.000000e+00 #> 772         63          6       1.000000e+00 #> 773         63          7       1.000000e+00 #> 774         63          8       1.000000e+00 #> 775         63          9       1.000000e+00 #> 776         63         10       1.000000e+00 #> 777         63         11       1.000000e+00 #> 778         63         12       4.732621e-03 #> 779         63         13       3.438866e-03 #> 780         63         14       4.732621e-03 #> 781         63         15       9.952674e-01 #> 782         64          1       1.000000e+00 #> 783         64          2       1.000000e+00 #> 784         64          3       1.000000e+00 #> 785         64          4       1.000000e+00 #> 786         64          5       2.686551e-10 #> 787         64          6       1.000000e+00 #> 788         64          7       1.321811e-52 #> 789         64          8       1.000000e+00 #> 790         64          9       1.000000e+00 #> 791         64         10       1.000000e+00 #> 792         64         11       8.715638e-30 #> 793         64         12       1.000000e+00 #> 794         64         13       1.000000e+00 #> 795         64         14       1.000000e+00 #> 796         64         15       6.575557e-03 #> 797         65          1       3.292857e-03 #> 798         65          2       1.000000e+00 #> 799         65          3       1.000000e+00 #> 800         65          4       6.242087e-50 #> 801         65          5       1.000000e+00 #> 802         65          6       1.000000e+00 #> 803         65          7       1.000000e+00 #> 804         65          8       3.091588e-49 #> 805         66          1       1.000000e+00 #> 806         66          2       9.870535e-01 #> 807         66          3      4.783704e-107 #> 808         66          4       1.000000e+00 #> 809         66          5       1.554733e-02 #> 810         66          6      3.405467e-110 #> 811         66          7      3.405467e-110 #> 812         66          8      4.783704e-107 #> 813         66          9       1.000000e+00 #> 814         66         10       9.414133e-71 #> 815         66         11       1.294650e-02 #> 816         66         12       1.073073e-02 #> 817         66         13       1.000000e+00 #> 818         66         14       1.000000e+00 #> 819         66         15      1.254178e-308 #> 820         66         16       0.000000e+00 #> 821         66         17       1.294650e-02 #> 822         67          1       9.944131e-01 #> 823         67          2       1.000000e+00 #> 824         67          3       4.082806e-03 #> 825         67          4       1.000000e+00 #> 826         67          5       1.000000e+00 #> 827         67          6       1.000000e+00 #> 828         67          7       1.000000e+00 #> 829         67          8       1.000000e+00 #> 830         67          9       1.000000e+00 #> 831         67         10      1.336045e-113 #> 832         67         11       1.000000e+00 #> 833         67         12       1.000000e+00 #> 834         67         13      2.229089e-115 #> 835         67         14       9.959172e-01 #> 836         67         15       2.467378e-70 #> 837         67         16      8.611661e-311 #> 838         68          1       1.000000e+00 #> 839         68          2       9.973569e-01 #> 840         68          3       1.000000e+00 #> 841         68          4       1.000000e+00 #> 842         68          5       1.000000e+00 #> 843         68          6       1.000000e+00 #> 844         68          7       1.000000e+00 #> 845         68          8       1.000000e+00 #> 846         68          9       1.000000e+00 #> 847         68         10       1.000000e+00 #> 848         68         11       2.643133e-03 #> 849         68         12       1.000000e+00 #> 850         68         13       1.000000e+00 #> 851         68         14       1.000000e+00 #> 852         68         15       2.643133e-03 #> 853         69          1       1.000000e+00 #> 854         69          2       1.000000e+00 #> 855         69          3       1.077231e-41 #> 856         69          4       5.783785e-76 #> 857         69          5       1.077231e-41 #> 858         69          6       1.000000e+00 #> 859         69          7       2.481220e-42 #> 860         69          8       1.000000e+00 #> 861         69          9       5.783785e-76 #> 862         69         10       1.343428e-02 #> 863         69         11       6.845694e-03 #> 864         69         12       1.000000e+00 #> 865         70          1       1.000000e+00 #> 866         70          2       6.072606e-55 #> 867         70          3       1.000000e+00 #> 868         70          4       5.373679e-94 #> 869         70          5       9.931543e-01 #> 870         70          6       1.218915e-94 #> 871         70          7       1.000000e+00 #> 872         70          8       9.916514e-01 #> 873         70          9       1.000000e+00 #> 874         70         10       1.000000e+00 #> 875         70         11       3.591206e-56 #> 876         70         12       9.916514e-01 #> 877         70         13       1.117311e-55 #> 878         70         14       6.072606e-55 #> 879         70         15       1.000000e+00 #> 880         70         16       9.949617e-01 #> 881         71          1       1.000000e+00 #> 882         71          2       1.000000e+00 #> 883         71          3       1.000000e+00 #> 884         71          4       1.000000e+00 #> 885         71          5       7.564357e-03 #> 886         71          6       1.000000e+00 #> 887         71          7       1.000000e+00 #> 888         71          8       1.000000e+00 #> 889         71          9       6.188020e-03 #> 890         71         10       1.000000e+00 #> 891         71         11       1.000000e+00 #> 892         71         12       9.938120e-01 #> 893         71         13       1.000000e+00 #> 894         71         14       9.938120e-01 #> 895         71         15       9.924356e-01 #> 896         72          1       1.000000e+00 #> 897         72          2       0.000000e+00 #> 898         72          3       1.000000e+00 #> 899         72          4       1.000000e+00 #> 900         72          5       9.358014e-83 #> 901         72          6       1.000000e+00 #> 902         72          7      1.134547e-134 #> 903         72          8       1.000000e+00 #> 904         72          9       1.000000e+00 #> 905         72         10       1.000000e+00 #> 906         73          1       1.000000e+00 #> 907         73          2       1.000000e+00 #> 908         73          3       1.000000e+00 #> 909         73          4       0.000000e+00 #> 910         73          5       1.000000e+00 #> 911         73          6       1.000000e+00 #> 912         73          7       9.907965e-01 #> 913         73          8       1.000000e+00 #> 914         73          9       9.877564e-01 #> 915         74          1       1.000000e+00 #> 916         74          2       9.959172e-01 #> 917         74          3       1.000000e+00 #> 918         74          4       9.916514e-01 #> 919         74          5       1.000000e+00 #> 920         74          6       0.000000e+00 #> 921         74          7       1.000000e+00 #> 922         74          8       1.000000e+00 #> 923         74          9       1.000000e+00 #> 924         74         10       1.000000e+00 #> 925         74         11       1.000000e+00 #> 926         74         12       1.000000e+00 #> 927         74         13       4.082806e-03 #> 928         75          1       5.038287e-03 #> 929         75          2       9.924356e-01 #> 930         75          3       9.924356e-01 #> 931         75          4      1.271916e-156 #> 932         75          5       1.000000e+00 #> 933         75          6       1.171810e-67 #> 934         75          7       6.278604e-34 #> 935         75          8       7.617532e-67 #> 936         75          9       5.038287e-03 #> 937         75         10       9.949617e-01 #> 938         75         11       7.564357e-03 #> 939         75         12       1.000000e+00 #> 940         75         13       1.000000e+00 #> 941         76          1       1.000000e+00 #> 942         76          2       1.000000e+00 #> 943         76          3       1.000000e+00 #> 944         76          4       1.000000e+00 #> 945         76          5       1.000000e+00 #> 946         76          6       5.978065e-26 #> 947         76          7      9.237807e-171 #> 948         76          9       1.000000e+00 #> 949         76         10       3.453911e-51 #> 950         76         11       1.224356e-02 #> 951         77          1       9.894715e-01 #> 952         77          2       9.928744e-01 #> 953         77          3       1.393785e-02 #> 954         77          4       1.199664e-67 #> 955         77          5       1.000000e+00 #> 956         77          6       1.000000e+00 #> 957         77          7       9.860622e-01 #> 958         77          8       1.000000e+00 #> 959         77          9       1.199664e-67 #> 960         77         10       9.928744e-01 #> 961         77         11       9.713075e-69 #> 962         77         12       1.000000e+00 #> 963         77         13      1.849456e-107 #> 964         78          1       1.000000e+00 #> 965         78          2       9.790009e-01 #> 966         78          3      3.559441e-158 #> 967         78          4       0.000000e+00 #> 968         78          5       1.000000e+00 #> 969         78          6       0.000000e+00 #> 970         78          7       0.000000e+00 #> 971         78          8       1.000000e+00 #> 972         78          9       1.000000e+00 #> 973         78         10       1.114540e-02 #> 974         78         11       1.000000e+00 #> 975         78         12      3.559441e-158 #> 976         78         13       1.000000e+00 #> 977         78         14       1.000000e+00 #> 978         78         15      6.167155e-112 #> 979         79          1       1.000000e+00 #> 980         79          2       9.931543e-01 #> 981         79          3       1.289684e-57 #> 982         79          4       1.289684e-57 #> 983         79          5       6.845694e-03 #> 984         79          6       1.000000e+00 #> 985         79          7      1.837776e-138 #> 986         79          8       1.000000e+00 #> 987         79          9       1.000000e+00 #> 988         79         10       9.931543e-01 #> 989         79         11      3.956049e-194 #> 990         79         12       2.212092e-59 #> 991         79         13      3.233468e-141 #> 992         79         14       8.472286e-30 #> 993         80          1       9.877564e-01 #> 994         80          2       1.000000e+00 #> 995         80          3       1.000000e+00 #> 996         80          4       1.000000e+00 #> 997         80          5       1.000000e+00 #> 998         80          6       1.000000e+00 #> 999         80          7       1.924890e-02 #> 1000        80          8       1.000000e+00 #> 1001        80          9       2.707671e-02 #> 1002        80         10       1.224356e-02 #> 1003        80         11       1.000000e+00 #> 1004        81          1       1.000000e+00 #> 1005        81          2       1.000000e+00 #> 1006        81          3       1.000000e+00 #> 1007        81          4       1.000000e+00 #> 1008        81          5       1.000000e+00 #> 1009        81          6       1.000000e+00 #> 1010        81          7       2.209342e-03 #> 1011        81          8       1.000000e+00 #> 1012        81          9       1.000000e+00 #> 1013        81         10       9.961703e-01 #> 1014        81         11       1.000000e+00 #> 1015        81         12       9.977907e-01 #> 1016        82          1       4.082806e-03 #> 1017        82          2       4.082806e-03 #> 1018        82          3       2.643133e-03 #> 1019        82          4       1.000000e+00 #> 1020        82          5       1.000000e+00 #> 1021        82          6       9.967071e-01 #> 1022        82          7       1.000000e+00 #> 1023        82          8       1.000000e+00 #> 1024        82          9       4.082806e-03 #> 1025        82         10       1.000000e+00 #> 1026        82         11       1.000000e+00 #> 1027        83          1       1.000000e+00 #> 1028        83          2       1.000000e+00 #> 1029        83          3       1.000000e+00 #> 1030        83          4       1.000000e+00 #> 1031        83          5       1.000000e+00 #> 1032        83          6       1.000000e+00 #> 1033        83          7       9.983213e-01 #> 1034        83          8       1.328286e-03 #> 1035        83          9       1.000000e+00 #> 1036        83         10       1.000000e+00 #> 1037        83         11       1.000000e+00 #> 1038        84          1       1.000000e+00 #> 1039        84          2       4.538143e-03 #> 1040        84          3       9.954619e-01 #> 1041        84          4       1.000000e+00 #> 1042        84          5       1.000000e+00 #> 1043        84          6       1.000000e+00 #> 1044        84          7       1.000000e+00 #> 1045        84          8       1.000000e+00 #> 1046        84          9       9.954619e-01 #> 1047        84         10       7.564357e-03 #> 1048        84         11       1.000000e+00 #> 1049        84         12       1.000000e+00 #> 1050        84         13       1.000000e+00 #> 1051        85          1       1.000000e+00 #> 1052        85          2       1.000000e+00 #> 1053        85          3       1.000000e+00 #> 1054        85          4       6.845694e-03 #> 1055        85          5       1.000000e+00 #> 1056        85          6       1.000000e+00 #> 1057        85          7      3.471530e-110 #> 1058        85          8       1.000000e+00 #> 1059        85          9       1.000000e+00 #> 1060        85         10       1.000000e+00 #> 1061        85         11      1.724917e-109 #> 1062        85         12       1.000000e+00 #> 1063        85         13       1.000000e+00 #> 1064        86          1       1.000000e+00 #> 1065        86          2       1.000000e+00 #> 1066        86          3       1.013391e-02 #> 1067        86          4       0.000000e+00 #> 1068        86          5       1.000000e+00 #> 1069        86          6       6.845694e-03 #> 1070        86          7       1.000000e+00 #> 1071        86          8       1.000000e+00 #> 1072        86          9       1.000000e+00 #> 1073        86         10       0.000000e+00 #> 1074        86         11       0.000000e+00 #> 1075        86         12       1.000000e+00 #> 1076        86         13       0.000000e+00 #> 1077        86         14       1.000000e+00 #> 1078        86         15       6.845694e-03 #> 1079        87          1       1.000000e+00 #> 1080        87          2       4.370476e-61 #> 1081        87          3       4.838278e-12 #> 1082        87          5       4.538143e-03 #> 1083        87          6       1.000000e+00 #> 1084        87          7       3.341917e-34 #> 1085        87          8       1.000000e+00 #> 1086        87          9       1.000000e+00 #> 1087        87         10       3.651308e-35 #> 1088        88          1       1.000000e+00 #> 1089        88          2       4.086851e-67 #> 1090        88          3       9.924356e-01 #> 1091        88          4       1.000000e+00 #> 1092        88          5      1.757396e-222 #> 1093        88          6       2.609308e-34 #> 1094        88          7       4.538143e-03 #> 1095        88          8       1.000000e+00 #> 1096        88          9       1.000000e+00 #> 1097        88         10       1.000000e+00 #> 1098        88         11       1.000000e+00 #> 1099        88         12       9.938120e-01 #> 1100        88         13       9.076398e-66 #> 1101        88         14       1.000000e+00 #> 1102        88         15       9.720629e-34 #> 1103        89          1       1.000000e+00 #> 1104        89          2       4.395451e-34 #> 1105        89          3       1.472368e-02 #> 1106        89          4       6.043688e-59 #> 1107        89          5       7.521016e-35 #> 1108        89          6       1.000000e+00 #> 1109        89          7       6.043688e-59 #> 1110        89          8       4.395451e-34 #> 1111        89          9      5.611346e-154 #> 1112        89         10       3.221949e-60 #> 1113        89         11       9.790009e-01 #> 1114        89         12      4.168680e-208 #> 1115        90          1       1.000000e+00 #> 1116        90          2       6.484081e-23 #> 1117        90          3       2.841436e-57 #> 1118        90          4       3.175491e-23 #> 1119        90          5       1.000000e+00 #> 1120        90          6       2.824962e-58 #> 1121        90          7      9.185666e-183 #> 1122        90          8      4.894055e-116 #> 1123        90          9       1.000000e+00 #> 1124        90         10       1.000000e+00 #> 1125        91          1       1.000000e+00 #> 1126        91          2       1.000000e+00 #> 1127        91          3       1.000000e+00 #> 1128        91          4       1.000000e+00 #> 1129        91          5       1.000000e+00 #> 1130        91          6       1.000000e+00 #> 1131        91          7       6.845694e-03 #> 1132        91          8       1.000000e+00 #> 1133        91          9       4.082806e-03 #> 1134        91         10      1.383076e-152 #> 1135        91         11       9.944131e-01 #> 1136        92          1       1.000000e+00 #> 1137        92          2       1.285960e-96 #> 1138        92          3       9.954619e-01 #> 1139        92          4       1.000000e+00 #> 1140        92          5       1.000000e+00 #> 1141        92          6       1.000000e+00 #> 1142        92          7       1.000000e+00 #> 1143        92          8       1.000000e+00 #> 1144        92          9       1.000000e+00 #> 1145        92         10       9.954619e-01 #> 1146        92         11       1.000000e+00 #> 1147        93          1       1.000000e+00 #> 1148        93          2       1.000000e+00 #> 1149        93          3       1.842345e-99 #> 1150        93          4      6.602057e-151 #> 1151        93          5      2.826192e-149 #> 1152        93          6      2.826192e-149 #> 1153        93          7       0.000000e+00 #> 1154        93          8       9.907965e-01 #> 1155        93          9       1.000000e+00 #> 1156        93         10       1.000000e+00 #> 1157        93         11       9.938120e-01 #> 1158        93         12       1.000000e+00 #> 1159        93         13       9.907965e-01 #> 1160        93         14      8.648815e-101 #> 1161        94          1       1.000000e+00 #> 1162        94          2       9.949617e-01 #> 1163        94          3       1.000000e+00 #> 1164        94          4       1.000000e+00 #> 1165        94          5       6.845694e-03 #> 1166        94          6      9.109931e-305 #> 1167        94          7      2.510767e-109 #> 1168        94          8       1.000000e+00 #> 1169        94          9      5.059243e-110 #> 1170        94         10       1.000000e+00 #> 1171        94         11       1.000000e+00 #> 1172        95          1       1.000000e+00 #> 1173        95          2       1.000000e+00 #> 1174        95          3       3.668799e-03 #> 1175        95          4       0.000000e+00 #> 1176        95          5       0.000000e+00 #> 1177        95          6       9.954619e-01 #> 1178        95          7       1.000000e+00 #> 1179        95          8       1.000000e+00 #> 1180        95          9       1.000000e+00 #> 1181        95         10       1.000000e+00 #> 1182        95         11       1.866090e-55 #> 1183        96          1       1.000000e+00 #> 1184        96          2       2.951922e-03 #> 1185        96          3       1.000000e+00 #> 1186        96          4       9.970481e-01 #> 1187        96          5       1.000000e+00 #> 1188        96          6       9.949617e-01 #> 1189        96          7       1.000000e+00 #> 1190        96          8       1.000000e+00 #> 1191        96          9       1.000000e+00 #> 1192        96         10       1.000000e+00 #> 1193        96         11       1.000000e+00 #> 1194        96         12       1.000000e+00 #> 1195        96         13       1.000000e+00 #> 1196        96         14       1.000000e+00 #> 1197        96         15       5.038287e-03 #> 1198        97          1       1.000000e+00 #> 1199        97          2       1.000000e+00 #> 1200        97          3       1.000000e+00 #> 1201        97          4       1.000000e+00 #> 1202        97          5       9.959172e-01 #> 1203        97          6       6.845694e-03 #> 1204        97          7       9.949617e-01 #> 1205        97          8       1.000000e+00 #> 1206        97          9       1.000000e+00 #> 1207        97         10       1.000000e+00 #> 1208        97         11       1.000000e+00 #> 1209        97         12       4.082806e-03 #> 1210        97         13       4.082806e-03 #> 1211        97         14       6.845694e-03 #> 1212        98          1       1.000000e+00 #> 1213        98          2      1.150504e-114 #> 1214        98          3       1.000000e+00 #> 1215        98          4       6.845694e-03 #> 1216        98          5       5.911188e-69 #> 1217        98          6       1.000000e+00 #> 1218        98          7       6.845694e-03 #> 1219        98          8       0.000000e+00 #> 1220        99          1       1.000000e+00 #> 1221        99          2      2.295383e-204 #> 1222        99          3       1.000000e+00 #> 1223        99          4       1.000000e+00 #> 1224        99          5       1.000000e+00 #> 1225        99          6      2.295383e-204 #> 1226        99          7       1.000000e+00 #> 1227        99          8       1.224356e-02 #> 1228        99          9       1.224356e-02 #> 1229        99         10       1.000000e+00 #> 1230        99         11       6.188020e-03 #> 1231        99         12       1.000000e+00 #> 1232       100          1       1.000000e+00 #> 1233       100          2       9.949617e-01 #> 1234       100          3       1.000000e+00 #> 1235       100          4       9.924356e-01 #> 1236       100          5       1.000000e+00 #> 1237       100          6      1.733991e-221 #> 1238       100          7       2.321035e-33 #> 1239       100          8       2.321035e-33 #> 1240       100          9       1.000000e+00 #> 1241       101          1       1.000000e+00 #> 1242       101          2       1.000000e+00 #> 1243       101          3       1.000000e+00 #> 1244       101          4       2.887977e-18 #> 1245       101          5       1.027953e-39 #> 1246       101          6       1.000000e+00 #> 1247       101          7       1.000000e+00 #> 1248       101          8       1.224356e-02 #> 1249       101          9       1.000000e+00 #> 1250       102          1       9.924356e-01 #> 1251       102          2       1.000000e+00 #> 1252       102          3       1.343428e-02 #> 1253       102          4       1.000000e+00 #> 1254       102          5      8.016913e-174 #> 1255       102          6       1.000000e+00 #> 1256       102          7      3.387561e-171 #> 1257       102          8       7.564357e-03 #> 1258       102          9       9.898661e-01 #> 1259       102         10      3.387561e-171 #> 1260       102         11       1.000000e+00 #> 1261       102         12       1.000000e+00 #> 1262       102         13       1.000000e+00 #> 1263       103          1       1.318844e-02 #> 1264       103          2       1.000000e+00 #> 1265       103          3       0.000000e+00 #> 1266       103          4       6.709424e-03 #> 1267       103          5       1.000000e+00 #> 1268       103          6       1.000000e+00 #> 1269       103          7      2.846650e-256 #> 1270       103          8       1.000000e+00 #> 1271       103          9       0.000000e+00 #> 1272       103         10       1.000000e+00 #> 1273       104          1      7.652516e-205 #> 1274       104          2       9.931543e-01 #> 1275       104          4       1.000000e+00 #> 1276       104          5       1.000000e+00 #> 1277       104          6       1.000000e+00 #> 1278       104          7       1.000000e+00 #> 1279       104          8       1.000000e+00 #> 1280       104          9       9.949617e-01 #> 1281       104         10       1.000000e+00 #> 1282       105          1       9.931543e-01 #> 1283       105          2       1.000000e+00 #> 1284       105          3       8.348648e-03 #> 1285       105          4      6.776863e-231 #> 1286       105          5       1.000000e+00 #> 1287       105          6       1.000000e+00 #> 1288       105          7       1.000000e+00 #> 1289       105          8       9.916514e-01 #> 1290       105          9       5.038287e-03 #> 1291       105         10       1.000000e+00 #> 1292       105         11       6.845694e-03 #> 1293       106          1       1.000000e+00 #> 1294       106          2       1.000000e+00 #> 1295       106          3      3.061918e-161 #> 1296       106          4       0.000000e+00 #> 1297       106          5       9.838819e-01 #> 1298       106          6       9.916514e-01 #> 1299       106          7       1.000000e+00 #> 1300       106          8       8.348648e-03 #> 1301       106          9       0.000000e+00 #> 1302       106         10      1.662120e-219 #> 1303       106         11       0.000000e+00 #> 1304       106         12       1.000000e+00 #> 1305       106         13       1.000000e+00 #> 1306       106         14       1.000000e+00 #> 1307       107          2       1.000000e+00 #> 1308       107          3       1.000000e+00 #> 1309       107          4       6.308401e-49 #> 1310       107          5       4.052456e-89 #> 1311       107          6       2.181468e-49 #> 1312       108          1       1.000000e+00 #> 1313       108          2       1.000000e+00 #> 1314       108          3       0.000000e+00 #> 1315       108          4       0.000000e+00 #> 1316       108          5       0.000000e+00 #> 1317       108          6       1.000000e+00 #> 1318       108          7       1.000000e+00 #> 1319       108          8       9.938120e-01 #> 1320       108          9       0.000000e+00 #> 1321       108         10       0.000000e+00 #> 1322       108         11       1.000000e+00 #> 1323       108         12       9.916514e-01 #> 1324       108         13       1.000000e+00 #> 1325       109          1       1.000000e+00 #> 1326       109          2       9.944131e-01 #> 1327       109          3       1.000000e+00 #> 1328       109          4       4.672523e-83 #> 1329       109          5      4.660791e-135 #> 1330       109          6       1.000000e+00 #> 1331       109          7       1.000000e+00 #> 1332       109          8       1.000000e+00 #> 1333       109          9       4.082806e-03 #> 1334       109         10       5.586937e-03 #> 1335       109         11       9.959172e-01 #> 1336       109         12       1.160393e-83 #> 1337       109         13       9.967071e-01 #> 1338       109         14       4.672523e-83 #> 1339       109         15       4.672523e-83 #> 1340       109         16       1.000000e+00 #> 1341       110          1       1.000000e+00 #> 1342       110          2      3.721094e-112 #> 1343       110          3       1.000000e+00 #> 1344       110          4       1.000000e+00 #> 1345       110          5       1.000000e+00 #> 1346       110          6       1.000000e+00 #> 1347       110          7       1.000000e+00 #> 1348       110          8       9.954619e-01 #> 1349       110          9      1.127785e-109 #> 1350       110         10       1.000000e+00 #> 1351       110         11       6.188020e-03 #> 1352       110         12       7.564357e-03 #> 1353       110         13       1.000000e+00 #> 1354       110         14       1.000000e+00 #> 1355       111          1       9.938120e-01 #> 1356       111          2      5.183968e-219 #> 1357       111          3       1.000000e+00 #> 1358       111          4       9.877564e-01 #> 1359       111          5       0.000000e+00 #> 1360       111          6      5.436170e-221 #> 1361       111          7       1.000000e+00 #> 1362       111          8      1.757396e-222 #> 1363       111          9       1.000000e+00 #> 1364       111         10       0.000000e+00 #> 1365       111         11      5.436170e-221 #> 1366       111         12      5.653417e-160 #> 1367       112          1       1.000000e+00 #> 1368       112          2       1.000000e+00 #> 1369       112          3       1.000000e+00 #> 1370       112          4       1.000000e+00 #> 1371       112          5       1.000000e+00 #> 1372       112          6       1.000000e+00 #> 1373       112          7       1.000000e+00 #> 1374       112          8      4.222215e-190 #> 1375       112          9       6.188020e-03 #> 1376       112         10       9.938120e-01 #> 1377       113          1       9.888546e-01 #> 1378       113          2       1.114540e-02 #> 1379       113          3       9.838819e-01 #> 1380       113          4       3.067455e-12 #> 1381       113          5       1.000000e+00 #> 1382       113          6       2.002124e-92 #> 1383       113          7       3.067455e-12 #> 1384       113          8       1.000000e+00 #> 1385       113          9       1.000000e+00 #> 1386       113         10       3.448790e-58 #> 1387       113         11       1.000000e+00 #> 1388       113         12       1.000000e+00 #> 1389       114          1       1.000000e+00 #> 1390       114          2       1.000000e+00 #> 1391       114          3       1.000000e+00 #> 1392       114          4       1.343428e-02 #> 1393       114          5       1.000000e+00 #> 1394       114          6       1.000000e+00 #> 1395       114          7       1.000000e+00 #> 1396       114          8       1.000000e+00 #> 1397       114          9       1.000000e+00 #> 1398       114         10       1.013391e-02 #> 1399       114         11       1.000000e+00 #> 1400       114         12       1.343428e-02 #> 1401       114         13       1.000000e+00 #> 1402       114         14       7.564357e-03 #> 1403       115          1       1.000000e+00 #> 1404       115          2       3.231087e-74 #> 1405       115          3      2.094253e-185 #> 1406       115          4      6.969868e-253 #> 1407       115          5       9.924356e-01 #> 1408       115          6       8.673046e-75 #> 1409       115          7       9.924356e-01 #> 1410       115          8       1.000000e+00 #> 1411       115          9       9.938120e-01 #> 1412       115         10       8.673046e-75 #> 1413       115         11       1.000000e+00 #> 1414       115         12       6.188020e-03 #> 1415       115         13       1.000000e+00 #> 1416       116          1       1.870617e-63 #> 1417       116          2       1.000000e+00 #> 1418       116          3       9.931543e-01 #> 1419       116          4       0.000000e+00 #> 1420       116          5       1.000000e+00 #> 1421       116          6       0.000000e+00 #> 1422       116          7       1.000000e+00 #> 1423       116          8       3.802664e-62 #> 1424       116          9       5.586937e-03 #> 1425       116         10       1.870617e-63 #> 1426       116         11       6.264790e-63 #> 1427       116         12       1.000000e+00 #> 1428       117          1       1.000000e+00 #> 1429       117          2       1.000000e+00 #> 1430       117          3       1.000000e+00 #> 1431       117          4       1.000000e+00 #> 1432       117          5       1.000000e+00 #> 1433       117          6       1.000000e+00 #> 1434       117          7      7.719403e-131 #> 1435       117          8       1.000000e+00 #> 1436       117          9       1.000000e+00 #> 1437       117         10       7.564357e-03 #> 1438       117         11       1.422265e-84 #> 1439       117         12       7.564357e-03 #> 1440       117         13       1.000000e+00 #> 1441       117         14       1.000000e+00 #> 1442       117         15       1.000000e+00 #> 1443       117         16       1.000000e+00 #> 1444       117         17       1.000000e+00 #> 1445       117         18       7.564357e-03 #> 1446       118          1       1.000000e+00 #> 1447       118          2       6.444058e-03 #> 1448       118          3       9.872916e-01 #> 1449       118          4       9.935559e-01 #> 1450       118          5       1.000000e+00 #> 1451       118          6       1.000000e+00 #> 1452       118          7       1.000000e+00 #> 1453       118          8      1.760484e-202 #> 1454       118          9      1.760484e-202 #> 1455       118         10      1.410831e-201 #> 1456       119          1       1.000000e+00 #> 1457       119          2       3.953914e-18 #> 1458       119          3       1.000000e+00 #> 1459       119          4       4.538143e-03 #> 1460       119          5       3.953914e-18 #> 1461       119          6       5.771527e-84 #> 1462       119          7       1.000000e+00 #> 1463       119          8       3.575778e-41 #> 1464       119          9       2.534975e-17 #> 1465       119         10       1.000000e+00 #> 1466       120          1       1.000000e+00 #> 1467       120          2       3.292857e-03 #> 1468       120          3       1.000000e+00 #> 1469       120          4       1.000000e+00 #> 1470       120          5       4.082806e-03 #> 1471       120          6       1.000000e+00 #> 1472       120          7      1.803333e-106 #> 1473       120          8       1.000000e+00 #> 1474       120          9       1.257211e-61 #> 1475       120         10       1.000000e+00 #> 1476       120         11       3.292857e-03 #> 1477       120         12       1.000000e+00 #> 1478       120         13       1.257211e-61 #> 1479       120         14       1.000000e+00 #> 1480       120         15       1.257211e-61 #> 1481       121          1       9.959172e-01 #> 1482       121          2       9.959172e-01 #> 1483       121          3       9.931543e-01 #> 1484       121          4       1.000000e+00 #> 1485       121          5      2.145847e-197 #> 1486       121          6       5.586937e-03 #> 1487       121          7       1.000000e+00 #> 1488       121          8      1.640757e-136 #> 1489       121          9       1.000000e+00 #> 1490       121         10       1.000000e+00 #> 1491       121         11       1.000000e+00 #> 1492       121         12       9.959172e-01 #> 1493       121         13      2.474564e-198 #> 1494       122          1       1.000000e+00 #> 1495       122          2      2.690853e-112 #> 1496       122          3       4.832621e-03 #> 1497       122          4       9.940590e-01 #> 1498       122          5       1.000000e+00 #> 1499       122          6       0.000000e+00 #> 1500       122          7       3.484666e-67 #> 1501       122          8       9.951674e-01 #> 1502       122          9       3.693186e-67 #> 1503       122         10      3.282540e-111 #> 1504       122         11       5.334496e-68 #> 1505       122         12       1.000000e+00 #> 1506       123          1       1.000000e+00 #> 1507       123          2      3.967714e-288 #> 1508       123          3       1.000000e+00 #> 1509       123          4      3.574345e-284 #> 1510       123          5       1.000000e+00 #> 1511       123          6      3.574345e-284 #> 1512       123          7       0.000000e+00 #> 1513       123          8       1.000000e+00 #> 1514       123          9       1.000000e+00 #> 1515       123         10       1.000000e+00 #> 1516       123         11       9.907965e-01 #> 1517       123         12       1.343428e-02 #> 1518       123         13       1.000000e+00 #> 1519       123         14       1.000000e+00 #> 1520       124          1       5.038287e-03 #> 1521       124          2       2.296085e-25 #> 1522       124          3       4.852790e-25 #> 1523       124          4       1.757886e-70 #> 1524       124          5       5.038287e-03 #> 1525       124          6       9.949617e-01 #> 1526       124          7       6.617365e-24 #> 1527       124          8       1.675048e-36 #> 1528       124          9       1.757886e-70 #> 1529       125          1       9.999999e-01 #> 1530       125          2       9.999999e-01 #> 1531       125          3       1.288339e-07 #> 1532       125          4       6.846813e-02 #> 1533       125          5       1.013391e-02 #> 1534       125          6       6.051086e-09 #> 1535       125          7       9.898661e-01 #> 1536       125          8       6.051086e-09 #> 1537       125          9       5.920041e-08 #> 1538       125         10       1.000000e+00 #> 1539       125         11       1.013391e-02 #> 1540       125         12       1.000000e+00 #> 1541       125         13       9.852763e-01 #> 1542       125         14       9.818544e-22 #> 1543       125         15       1.000000e+00 #> 1544       126          1       1.000000e+00 #> 1545       126          2       1.013391e-02 #> 1546       126          3       1.000000e+00 #> 1547       126          4       0.000000e+00 #> 1548       126          5       0.000000e+00 #> 1549       126          6       7.564357e-03 #> 1550       126          7       1.000000e+00 #> 1551       126          8       0.000000e+00 #> 1552       126          9       0.000000e+00 #> 1553       126         11       1.000000e+00 #> 1554       126         12       0.000000e+00 #> 1555       126         13       5.586937e-03 #> 1556       126         14       0.000000e+00 #> 1557       126         15       0.000000e+00 #> 1558       126         16       1.000000e+00 #> 1559       127          1       1.000000e+00 #> 1560       127          2       6.169807e-83 #> 1561       127          3       2.017606e-03 #> 1562       127          4       1.000000e+00 #> 1563       127          5       1.000000e+00 #> 1564       127          6       9.968476e-01 #> 1565       127          7       3.152447e-03 #> 1566       127          8       1.000000e+00 #> 1567       127          9       1.000000e+00 #> 1568       127         10       9.829694e-82 #> 1569       127         11       9.968476e-01 #> 1570       127         12      5.481498e-136 #> 1571       127         13       0.000000e+00 #> 1572       127         14       1.000000e+00 #> 1573       127         15       1.000000e+00 #> 1574       127         16       1.000000e+00 #> 1575       128          1       5.073247e-02 #> 1576       128          2       2.490545e-02 #> 1577       128          3       1.000000e+00 #> 1578       128          4      2.624478e-175 #> 1579       128          5      4.689783e-132 #> 1580       128          6      1.372848e-133 #> 1581       128          7       1.000000e+00 #> 1582       128          8       9.654432e-01 #> 1583       128          9       3.455677e-02 #> 1584       128         10       0.000000e+00 #> 1585       128         11       1.000000e+00 #> 1586       128         12       0.000000e+00 #> 1587       128         13       1.000000e+00 #> 1588       128         14       1.000000e+00 #> 1589       129          1       2.707671e-02 #> 1590       129          2       9.823757e-01 #> 1591       129          3       1.000000e+00 #> 1592       129          4       1.000000e+00 #> 1593       129          5       1.224356e-02 #> 1594       129          6       1.000000e+00 #> 1595       129          7       1.000000e+00 #> 1596       129          8       1.000000e+00 #> 1597       129          9       1.762427e-02 #> 1598       129         10       9.877564e-01 #> 1599       130          1       9.975278e-01 #> 1600       130          2       1.000000e+00 #> 1601       130          3       9.975278e-01 #> 1602       130          4       1.000000e+00 #> 1603       130          5       1.000000e+00 #> 1604       130          6       9.969157e-01 #> 1605       130          7       7.358282e-67 #> 1606       130          8       1.000000e+00 #> 1607       130          9       1.000000e+00 #> 1608       130         10       9.975278e-01 #> 1609       130         11       9.969157e-01 #> 1610       130         12       1.000000e+00 #> 1611       130         13       9.969157e-01 #> 1612       130         14       1.000000e+00 #> 1613       130         15      1.997156e-113 #> 1614       130         16       1.000000e+00 #> 1615       130         17      1.245694e-111 #> 1616       131          1       1.000000e+00 #> 1617       131          2      6.563844e-107 #> 1618       131          3       4.400016e-68 #> 1619       131          4       9.916514e-01 #> 1620       131          5       1.000000e+00 #> 1621       131          6      5.763519e-303 #> 1622       131          7       6.650099e-69 #> 1623       131          8      2.749035e-108 #> 1624       131          9       9.888546e-01 #> 1625       131         10       1.114540e-02 #> 1626       131         11       1.000000e+00 #> 1627       131         12       4.400016e-68 #> 1628       131         13      1.032435e-304 #> 1629       131         14       1.000000e+00 #> 1630       131         15       1.000000e+00 #> 1631       131         16       1.000000e+00 #> 1632       132          1       9.973569e-01 #> 1633       132          2       1.000000e+00 #> 1634       132          3       2.643133e-03 #> 1635       132          4       1.000000e+00 #> 1636       132          5       1.000000e+00 #> 1637       132          6       1.000000e+00 #> 1638       132          7       4.082806e-03 #> 1639       132          8      1.626929e-201 #> 1640       132          9       1.000000e+00 #> 1641       132         10       1.000000e+00 #> 1642       132         11       1.000000e+00 #> 1643       132         12      1.435647e-200 #> 1644       132         13       3.292857e-03 #> 1645       133          1       1.000000e+00 #> 1646       133          2       9.970481e-01 #> 1647       133          3       1.000000e+00 #> 1648       133          4       1.883857e-03 #> 1649       133          5      1.912210e-135 #> 1650       133          6       1.486301e-81 #> 1651       133          7       3.739094e-82 #> 1652       133          8       9.970481e-01 #> 1653       133          9       1.000000e+00 #> 1654       133         10      1.912210e-135 #> 1655       134          1       1.000000e+00 #> 1656       134          2       1.000000e+00 #> 1657       134          3       1.216424e-95 #> 1658       134          4       1.000000e+00 #> 1659       134          5       1.000000e+00 #> 1660       134          6       8.348648e-03 #> 1661       134          7       8.348648e-03 #> 1662       134          8       1.949047e-57 #> 1663       134          9       1.926889e-56 #> 1664       134         10       1.000000e+00 #> 1665       134         11       1.000000e+00 #> 1666       135          1       9.954619e-01 #> 1667       135          2       1.000000e+00 #> 1668       135          3       1.000000e+00 #> 1669       135          4       1.000000e+00 #> 1670       135          5       9.954619e-01 #> 1671       135          6       1.000000e+00 #> 1672       135          7       1.000000e+00 #> 1673       135          8       1.000000e+00 #> 1674       135          9       9.938120e-01 #> 1675       135         10       9.970481e-01 #> 1676       135         11       1.000000e+00 #> 1677       135         12       6.188020e-03 #> 1678       135         13       1.000000e+00 #> 1679       136          1       1.000000e+00 #> 1680       136          2       9.924356e-01 #> 1681       136          3       7.564357e-03 #> 1682       136          4       1.000000e+00 #> 1683       136          5       1.000000e+00 #> 1684       136          6       1.000000e+00 #> 1685       136          7       1.000000e+00 #> 1686       136          8      5.426721e-196 #> 1687       136          9      1.222100e-139 #> 1688       136         10       1.000000e+00 #> 1689       136         11       9.203454e-03 #> 1690       137          1       3.668799e-03 #> 1691       137          2       1.000000e+00 #> 1692       137          3       9.963312e-01 #> 1693       137          4      1.387370e-175 #> 1694       137          5       1.000000e+00 #> 1695       137          6      1.387370e-175 #> 1696       137          7      4.433392e-117 #> 1697       137          8       1.000000e+00 #> 1698       137          9       5.038287e-03 #> 1699       137         10       0.000000e+00 #> 1700       137         11       1.000000e+00 #> 1701       137         12       1.000000e+00 #> 1702       138          1       1.000000e+00 #> 1703       138          2      5.466217e-202 #> 1704       138          3      5.586698e-275 #> 1705       138          4      7.198468e-279 #> 1706       138          5       1.000000e+00 #> 1707       138          6       9.924356e-01 #> 1708       138          7       1.000000e+00 #> 1709       138          8       1.000000e+00 #> 1710       138          9       1.000000e+00 #> 1711       138         10       5.586937e-03 #> 1712       138         11       3.668799e-03 #> 1713       138         12       1.000000e+00 #> 1714       138         13       9.944131e-01 #> 1715       138         14      1.211766e-276 #> 1716       139          1       1.000000e+00 #> 1717       139          2       1.000000e+00 #> 1718       139          3       4.259791e-03 #> 1719       139          4       1.000000e+00 #> 1720       139          5       1.000000e+00 #> 1721       139          6       6.444058e-03 #> 1722       139          7       6.444058e-03 #> 1723       139          8       6.444058e-03 #> 1724       139          9       1.000000e+00 #> 1725       139         10       1.000000e+00 #> 1726       139         11       1.000000e+00 #> 1727       139         12       1.797908e-61 #> 1728       139         13       1.000000e+00 #> 1729       139         14       1.000000e+00 #> 1730       139         15       9.957402e-01 #> 1731       140          1       1.000000e+00 #> 1732       140          2       1.000000e+00 #> 1733       140          3       4.082806e-03 #> 1734       140          4       9.970481e-01 #> 1735       140          5       1.000000e+00 #> 1736       140          6       1.000000e+00 #> 1737       140          7       1.000000e+00 #> 1738       140          8       9.959172e-01 #> 1739       141          1       1.000000e+00 #> 1740       141          2       1.000000e+00 #> 1741       141          3       1.000000e+00 #> 1742       141          4       1.000000e+00 #> 1743       141          5       1.000000e+00 #> 1744       141          6       1.000000e+00 #> 1745       141          7       1.000000e+00 #> 1746       141          8       1.000000e+00 #> 1747       141          9       9.973569e-01 #> 1748       141         10       1.000000e+00 #> 1749       141         11       4.538143e-03 #> 1750       141         12       3.292857e-03 #> 1751       142          1       1.000000e+00 #> 1752       142          2       1.000000e+00 #> 1753       142          3       1.000000e+00 #> 1754       142          4       1.000000e+00 #> 1755       142          5       1.000000e+00 #> 1756       142          6       1.000000e+00 #> 1757       142          7       2.111501e-03 #> 1758       142          8       1.000000e+00 #> 1759       142          9       9.976362e-01 #> 1760       142         10       1.678742e-03 #> 1761       142         11       1.000000e+00 #> 1762       142         12       1.678742e-03 #> 1763       142         13       2.363822e-03 #> 1764       143          1       1.000000e+00 #> 1765       143          2       1.000000e+00 #> 1766       143          3       7.564357e-03 #> 1767       143          4       1.000000e+00 #> 1768       143          5       9.944131e-01 #> 1769       143          6       1.000000e+00 #> 1770       143          7       1.000000e+00 #> 1771       143          8       1.000000e+00 #> 1772       143          9       1.926889e-56 #> 1773       143         10       6.011939e-56 #> 1774       143         11       1.000000e+00 #> 1775       143         12       1.000000e+00 #> 1776       143         13       7.564357e-03 #> 1777       143         14       7.564357e-03 #> 1778       143         15       1.000000e+00 #> 1779       144          1       5.038287e-03 #> 1780       144          2       1.000000e+00 #> 1781       144          3       1.000000e+00 #> 1782       144          4       3.848743e-07 #> 1783       144          5       9.970481e-01 #> 1784       144          6       1.505403e-07 #> 1785       144          7       9.999997e-01 #> 1786       144          8       9.970481e-01 #> 1787       144          9       1.000000e+00 #> 1788       145          1       1.000000e+00 #> 1789       145          2       9.913182e-01 #> 1790       145          3       1.157394e-02 #> 1791       145          4       1.000000e+00 #> 1792       145          5       1.000000e+00 #> 1793       145          6       1.000000e+00 #> 1794       145          7       1.000000e+00 #> 1795       145          8       1.000000e+00 #> 1796       145          9       1.000000e+00 #> 1797       145         10       1.000000e+00 #> 1798       145         11       7.629409e-52 #> 1799       145         12       5.054883e-89 #> 1800       145         13       7.629409e-52 #> 1801       145         14       9.935559e-01 #> 1802       145         15       9.884261e-01 #> 1803       145         16       4.360887e-88 #> 1804       145         17       1.000000e+00 #> 1805       146          1       1.000000e+00 #> 1806       146          2      3.278087e-147 #> 1807       146          3      3.278087e-147 #> 1808       146          4       9.203454e-03 #> 1809       146          5       0.000000e+00 #> 1810       146          6       1.869376e-97 #> 1811       146          7       1.000000e+00 #> 1812       146          8       1.000000e+00 #> 1813       146          9       1.000000e+00 #> 1814       146         10       1.000000e+00 #> 1815       146         11       1.000000e+00 #> 1816       146         12      2.001690e-148 #> 1817       146         13       9.931543e-01 #> 1818       146         14      3.083956e-149 #> 1819       146         15       0.000000e+00 #> 1820       146         16      3.278087e-147 #> 1821       146         17       0.000000e+00 #> 1822       146         18       1.000000e+00 #> 1823       147          1       1.000000e+00 #> 1824       147          2       1.000000e+00 #> 1825       147          3       1.000000e+00 #> 1826       147          4       1.000000e+00 #> 1827       147          5       1.000000e+00 #> 1828       147          6       1.000000e+00 #> 1829       147          7       1.000000e+00 #> 1830       147          8       1.096270e-25 #> 1831       147          9       9.941791e-01 #> 1832       147         10       9.921301e-01 #> 1833       147         11       9.921301e-01 #> 1834       147         12       9.894715e-01 #> 1835       147         15       9.941791e-01 #> 1836       148          1       9.944131e-01 #> 1837       148          2       1.000000e+00 #> 1838       148          3       1.000000e+00 #> 1839       148          4       1.000000e+00 #> 1840       148          5       1.000000e+00 #> 1841       148          6       1.000000e+00 #> 1842       148          7       1.000000e+00 #> 1843       148          8       1.000000e+00 #> 1844       148          9       9.959172e-01 #> 1845       148         10       9.959172e-01 #> 1846       148         11       9.944131e-01 #> 1847       148         12       1.000000e+00 #> 1848       149          1       1.000000e+00 #> 1849       149          2       1.000000e+00 #> 1850       149          3       1.871782e-82 #> 1851       149          4       1.000000e+00 #> 1852       149          5       1.000000e+00 #> 1853       149          6       1.000000e+00 #> 1854       149          7       4.538143e-03 #> 1855       149          8       4.538143e-03 #> 1856       149          9       1.000000e+00 #> 1857       149         10       1.000000e+00 #> 1858       149         11       1.871782e-82 #> 1859       150          1       1.000000e+00 #> 1860       150          2       1.000000e+00 #> 1861       150          3       1.000000e+00 #> 1862       150          4       9.980279e-01 #> 1863       150          5       1.000000e+00 #> 1864       150          6       1.000000e+00 #> 1865       150          7       1.000000e+00 #> 1866       150          8       9.961703e-01 #> 1867       150          9       1.972094e-03 #> 1868       150         10       9.961703e-01 #> 1869       151          1       1.224356e-02 #> 1870       151          2       1.000000e+00 #> 1871       151          3       8.348648e-03 #> 1872       151          4       1.000000e+00 #> 1873       151          5       1.000000e+00 #> 1874       151          6       1.000000e+00 #> 1875       151          7       1.224356e-02 #> 1876       151          8       1.000000e+00 #> 1877       151          9       1.224356e-02 #> 1878       151         10       1.000000e+00 #> 1879       151         11       9.944131e-01 #> 1880       151         12       1.224356e-02 #> 1881       151         13       8.348648e-03 #> 1882       152          1       1.000000e+00 #> 1883       152          2       1.000000e+00 #> 1884       152          3       2.567111e-42 #> 1885       152          5       4.832621e-03 #> 1886       152          6       2.824702e-03 #> 1887       152          7       1.000000e+00 #> 1888       152          8       2.166286e-43 #> 1889       152          9       1.000000e+00 #> 1890       153          1       1.000000e+00 #> 1891       153          2       1.000000e+00 #> 1892       153          3       1.000000e+00 #> 1893       153          4       6.188020e-03 #> 1894       153          5       1.000000e+00 #> 1895       153          6       1.000000e+00 #> 1896       153          7       1.000000e+00 #> 1897       153          8       9.954619e-01 #> 1898       153          9       1.000000e+00 #> 1899       153         10       6.188020e-03 #> 1900       154          1       1.000000e+00 #> 1901       154          2       1.000000e+00 #> 1902       154          3       1.000000e+00 #> 1903       154          4       9.924356e-01 #> 1904       154          5       0.000000e+00 #> 1905       154          6      1.202187e-259 #> 1906       154          7       9.924356e-01 #> 1907       154          9       0.000000e+00 #> 1908       154         10       0.000000e+00 #> 1909       154         11       0.000000e+00 #> 1910       155          1       1.000000e+00 #> 1911       155          2       8.348648e-03 #> 1912       155          3      9.802593e-103 #> 1913       155          4       1.000000e+00 #> 1914       155          5       9.916514e-01 #> 1915       155          6       1.000000e+00 #> 1916       155          7       6.188020e-03 #> 1917       155          8      4.374374e-104 #> 1918       155          9       1.000000e+00 #> 1919       155         10      9.802593e-103 #> 1920       155         11       1.000000e+00 #> 1921       155         12      9.802593e-103 #> 1922       155         13       1.000000e+00 #> 1923       155         14       8.348648e-03 #> 1924       155         15       1.000000e+00 #> 1925       156          1       1.000000e+00 #> 1926       156          2       1.000000e+00 #> 1927       156          3       1.000000e+00 #> 1928       156          4       1.000000e+00 #> 1929       156          5       5.586937e-03 #> 1930       156          6       1.000000e+00 #> 1931       156          7      4.553631e-141 #> 1932       156          8      2.803996e-140 #> 1933       156          9      4.553631e-141 #> 1934       156         10       1.000000e+00 #> 1935       156         11       9.931543e-01 #> 1936       156         12       1.000000e+00 #> 1937       156         13      7.356875e-142 #> 1938       156         14       9.954619e-01 #> 1939       156         15       0.000000e+00 #> 1940       157          1       1.000000e+00 #> 1941       157          2       1.000000e+00 #> 1942       157          3       0.000000e+00 #> 1943       157          4       1.000000e+00 #> 1944       157          5       1.000000e+00 #> 1945       157          6       1.000000e+00 #> 1946       157          7       9.931543e-01 #> 1947       157          8       9.949617e-01 #> 1948       157          9       1.000000e+00 #> 1949       157         10       0.000000e+00 #> 1950       157         11       1.000000e+00 #> 1951       157         12       0.000000e+00 #> 1952       158          1       1.000000e+00 #> 1953       158          2       1.013391e-02 #> 1954       158          3       2.971900e-79 #> 1955       158          4       4.947093e-81 #> 1956       158          5       1.000000e+00 #> 1957       158          6       7.026059e-46 #> 1958       158          7       7.026059e-46 #> 1959       158          8       1.000000e+00 #> 1960       158          9       1.000000e+00 #> 1961       158         10       1.484541e-44 #> 1962       158         11       1.000000e+00 #> 1963       158         12       7.564357e-03 #> 1964       158         13       1.000000e+00 #> 1965       158         14       1.000000e+00 #> 1966       158         15       3.248397e-45 #> 1967       158         16       1.000000e+00 #> 1968       159          1       1.000000e+00 #> 1969       159          2       1.224356e-02 #> 1970       159          3       1.000000e+00 #> 1971       159          4       1.000000e+00 #> 1972       159          5       1.224356e-02 #> 1973       159          6       1.611814e-02 #> 1974       159          7       1.013391e-02 #> 1975       159          8       1.000000e+00 #> 1976       159          9       1.000000e+00 #> 1977       159         10       9.877564e-01 #> 1978       159         11       1.000000e+00 #> 1979       160          1       3.748454e-03 #> 1980       160          2       3.017448e-03 #> 1981       160          3       1.000000e+00 #> 1982       160          4       9.948560e-01 #> 1983       160          5       3.017448e-03 #> 1984       160          6       2.026995e-83 #> 1985       160          7       1.000000e+00 #> 1986       160          8       8.145206e-83 #> 1987       160          9       5.144014e-03 #> 1988       160         10      2.285416e-135 #> 1989       160         11       9.962515e-01 #> 1990       160         12       1.000000e+00 #> 1991       160         13       1.000000e+00 #> 1992       160         14      1.938259e-133 #> 1993       160         15       1.000000e+00 #> 1994       161          1       1.000000e+00 #> 1995       161          2      1.204550e-282 #> 1996       161          3      8.714924e-106 #> 1997       161          4       1.144266e-62 #> 1998       161          5      8.187301e-107 #> 1999       161          6      7.604973e-280 #> 2000       161          7       0.000000e+00 #> 2001       161          8      8.714924e-106 #> 2002       161          9      5.789934e-281 #> 2003       162          1       1.000000e+00 #> 2004       162          2       1.328781e-93 #> 2005       162          3      3.704049e-140 #> 2006       162          4       0.000000e+00 #> 2007       162          5       1.157394e-02 #> 2008       162          6       0.000000e+00 #> 2009       162          7       1.000000e+00 #> 2010       162          8       1.000000e+00 #> 2011       162          9       9.884261e-01 #> 2012       162         10       6.844775e-95 #> 2013       162         11       9.847315e-01 #> 2014       162         12       1.000000e+00 #> 2015       162         13      3.704049e-140 #> 2016       162         14       1.000000e+00 #> 2017       162         15       9.884261e-01 #> 2018       162         16       1.000000e+00 #> 2019       163          1       3.292857e-03 #> 2020       163          2       2.111501e-03 #> 2021       163          3       1.000000e+00 #> 2022       163          4       1.000000e+00 #> 2023       163          5       1.000000e+00 #> 2024       163          6       9.973569e-01 #> 2025       163          7       1.000000e+00 #> 2026       163          8       1.000000e+00 #> 2027       163          9       1.000000e+00 #> 2028       164          1       1.000000e+00 #> 2029       164          2       1.000000e+00 #> 2030       164          3       1.000000e+00 #> 2031       164          4       1.000000e+00 #> 2032       164          5       1.000000e+00 #> 2033       164          6       7.564357e-03 #> 2034       164          7       1.000000e+00 #> 2035       164          8       1.000000e+00 #> 2036       164          9       7.564357e-03 #> 2037       164         10       1.000000e+00 #> 2038       164         11       1.000000e+00 #> 2039       164         12       9.938120e-01 #> 2040       165          1       1.000000e+00 #> 2041       165          2       9.965611e-01 #> 2042       165          3       1.000000e+00 #> 2043       165          4       1.000000e+00 #> 2044       165          5       3.438866e-03 #> 2045       165          6       9.902011e-62 #> 2046       165          7       1.000000e+00 #> 2047       165          8       1.000000e+00 #> 2048       165          9       9.972370e-01 #> 2049       165         10       2.762966e-03 #> 2050       165         11       1.000000e+00 #> 2051       165         12       1.000000e+00 #> 2052       165         13      1.254402e-280 #> 2053       165         14       0.000000e+00 #> 2054       165         15       9.972370e-01 #> 2055       165         16       1.000000e+00 #> 2056       166          1       1.000000e+00 #> 2057       166          2       1.000000e+00 #> 2058       166          3       1.000000e+00 #> 2059       166          4       9.957402e-01 #> 2060       166          5       1.000000e+00 #> 2061       166          6       1.048430e-35 #> 2062       166          7       1.000000e+00 #> 2063       166          8       9.957402e-01 #> 2064       166          9       1.000000e+00 #> 2065       167          1       1.000000e+00 #> 2066       167          2       1.000000e+00 #> 2067       167          3       1.000000e+00 #> 2068       167          4       1.000000e+00 #> 2069       167          5       1.000000e+00 #> 2070       167          6       1.000000e+00 #> 2071       167          7       1.000000e+00 #> 2072       167          8       9.916514e-01 #> 2073       167          9       1.000000e+00 #> 2074       167         10       8.348648e-03 #> 2075       167         11       9.865657e-01 #> 2076       167         12       1.000000e+00 #> 2077       167         13       8.348648e-03 #> 2078       168          1       9.807511e-01 #> 2079       168          2       9.865657e-01 #> 2080       168          3       1.000000e+00 #> 2081       168          4       0.000000e+00 #> 2082       168          5       0.000000e+00 #> 2083       168          6       2.442478e-87 #> 2084       168          7      2.587152e-126 #> 2085       168          8       1.000000e+00 #> 2086       168          9       1.000000e+00 #> 2087       168         10       1.000000e+00 #> 2088       168         11       2.442478e-87 #> 2089       168         12       1.000000e+00 #> 2090       168         13       1.000000e+00 #> 2091       168         14       1.000000e+00 #> 2092       168         15      1.062843e-129 #> 2093       169          1       1.343428e-02 #> 2094       169          2       0.000000e+00 #> 2095       169          3       0.000000e+00 #> 2096       169          4       0.000000e+00 #> 2097       169          5      1.262367e-278 #> 2098       169          6       1.000000e+00 #> 2099       169          7       9.898661e-01 #> 2100       169          8       1.000000e+00 #> 2101       169          9       9.931543e-01 #> 2102       169         10       0.000000e+00 #> 2103       169         11       0.000000e+00 #> 2104       169         12       0.000000e+00 #> 2105       169         13       1.000000e+00 #> 2106       169         14       1.000000e+00 #> 2107       170          1       1.000000e+00 #> 2108       170          2       1.000000e+00 #> 2109       170          3      1.861185e-157 #> 2110       170          4      1.757396e-222 #> 2111       170          5      3.318568e-156 #> 2112       170          6       3.292857e-03 #> 2113       170          7      3.318568e-156 #> 2114       170          8      3.318568e-156 #> 2115       170          9       1.000000e+00 #> 2116       170         10      1.757396e-222 #> 2117       170         11       1.000000e+00 #> 2118       170         12       0.000000e+00 #> 2119       170         13       9.938120e-01 #> 2120       170         14       1.000000e+00 #> 2121       170         15       0.000000e+00 #> 2122       171          1       9.967071e-01 #> 2123       171          2      2.758188e-134 #> 2124       171          3       6.308953e-17 #> 2125       171          4       1.167811e-42 #> 2126       171          5       3.292857e-03 #> 2127       171          6       1.606678e-43 #> 2128       171          7       9.973569e-01 #> 2129       171          8       1.167811e-42 #> 2130       171          9       9.959172e-01 #> 2131       171         10       1.000000e+00 #> 2132       171         11       1.000000e+00 #> 2133       171         12       1.000000e+00 #> 2134       172          1       8.348648e-03 #> 2135       172          2       1.000000e+00 #> 2136       172          3       1.000000e+00 #> 2137       172          4      3.859064e-262 #> 2138       172          5       1.114540e-02 #> 2139       172          6       1.000000e+00 #> 2140       172          7      6.602523e-259 #> 2141       172          8       1.000000e+00 #> 2142       172          9       1.000000e+00 #> 2143       172         10       6.188020e-03 #> 2144       172         11      8.516568e-194 #> 2145       172         12       1.000000e+00 #> 2146       172         13       1.000000e+00 #> 2147       172         14      2.090278e-192 #> 2148       173          1       1.000000e+00 #> 2149       173          2       1.000000e+00 #> 2150       173          3       1.000000e+00 #> 2151       173          4       5.038287e-03 #> 2152       173          5       1.000000e+00 #> 2153       173          6       1.000000e+00 #> 2154       173          7       5.038287e-03 #> 2155       174          1       1.000000e+00 #> 2156       174          2       1.000000e+00 #> 2157       174          3      5.583913e-223 #> 2158       174          4       1.000000e+00 #> 2159       174          5      3.061918e-161 #> 2160       174          6       1.000000e+00 #> 2161       174          7       1.000000e+00 #> 2162       174          8       1.000000e+00 #> 2163       174          9       0.000000e+00 #> 2164       174         10       1.000000e+00 #> 2165       174         11       1.000000e+00 #> 2166       174         12       0.000000e+00 #> 2167       174         13       5.586937e-03 #> 2168       175          1       9.916514e-01 #> 2169       175          4       6.188020e-03 #> 2170       175          5       1.114540e-02 #> 2171       175          6       8.348648e-03 #> 2172       175          7       8.348648e-03 #> 2173       176          1       1.000000e+00 #> 2174       176          2       4.082806e-03 #> 2175       176          3       7.627492e-80 #> 2176       176          4       1.000000e+00 #> 2177       176          5       6.706275e-44 #> 2178       176          6       5.586937e-03 #> 2179       176          7       1.484541e-44 #> 2180       176          8       9.944131e-01 #> 2181       176          9      1.834187e-202 #> 2182       176         10      1.834187e-202 #> 2183       176         11      8.472623e-206 #> 2184       176         12       1.000000e+00 #> 2185       176         13       1.000000e+00 #> 2186       176         14       1.000000e+00 #> 2187       176         15       1.000000e+00 #> 2188       177          1       9.999983e-01 #> 2189       177          2       3.299204e-24 #> 2190       177          3       1.000000e+00 #> 2191       177          4       9.954619e-01 #> 2192       177          5       5.513604e-33 #> 2193       177          6       9.954619e-01 #> 2194       177          7       9.999983e-01 #> 2195       177          8       9.999976e-01 #> 2196       177          9       9.999976e-01 #> 2197       177         10       1.000000e+00 #> 2198       177         11       3.299204e-24 #> 2199       177         12       5.513604e-33 #> 2200       178          1       1.000000e+00 #> 2201       178          2       9.963312e-01 #> 2202       178          3       3.668799e-03 #> 2203       178          4       1.000000e+00 #> 2204       178          5       1.000000e+00 #> 2205       178          6       1.000000e+00 #> 2206       178          7       1.000000e+00 #> 2207       178          8       6.446715e-37 #> 2208       178          9       1.000000e+00 #> 2209       178         10       1.000000e+00 #> 2210       178         11       1.000000e+00 #> 2211       178         12       1.000000e+00 #> 2212       178         13       9.949617e-01 #> 2213       178         14       1.827766e-72 #> 2214       178         15       1.000000e+00 #> 2215       178         16       1.000000e+00 #> 2216       179          1       1.000000e+00 #> 2217       179          2       7.845782e-56 #> 2218       179          3      2.695197e-128 #> 2219       179          4       6.188020e-03 #> 2220       179          5       9.898661e-01 #> 2221       179          6       1.000000e+00 #> 2222       179          7       1.000000e+00 #> 2223       179          8       6.188020e-03 #> 2224       179          9      1.985926e-129 #> 2225       179         10       1.000000e+00 #> 2226       179         11       5.557368e-27 #> 2227       179         12       7.860335e-28 #> 2228       180          1       1.000000e+00 #> 2229       180          2       1.000000e+00 #> 2230       180          3       9.963312e-01 #> 2231       180          4       9.970481e-01 #> 2232       180          5       1.000000e+00 #> 2233       180          6       1.000000e+00 #> 2234       181          1       1.000000e+00 #> 2235       181          2       1.000000e+00 #> 2236       181          3       1.000000e+00 #> 2237       181          4       1.000000e+00 #> 2238       181          5       1.000000e+00 #> 2239       181          6       9.931543e-01 #> 2240       181          7       6.845694e-03 #> 2241       181          8       2.346781e-68 #> 2242       181          9       9.877564e-01 #> 2243       181         10       3.533177e-69 #> 2244       181         11      8.364292e-302 #> 2245       181         12      1.509991e-303 #> 2246       182          1       9.203454e-03 #> 2247       182          2       1.000000e+00 #> 2248       182          3       1.000000e+00 #> 2249       182          4       1.000000e+00 #> 2250       182          5       1.000000e+00 #> 2251       182          6       1.000000e+00 #> 2252       182          7       1.000000e+00 #> 2253       182          8       1.000000e+00 #> 2254       182          9       1.000000e+00 #> 2255       182         10       6.188020e-03 #> 2256       182         11       1.000000e+00 #> 2257       182         12       9.954619e-01 #> 2258       182         13       4.538143e-03 #> 2259       182         14       1.000000e+00 #> 2260       182         15       4.538143e-03 #> 2261       183          1       5.038287e-03 #> 2262       183          2       1.000000e+00 #> 2263       183          3       1.000000e+00 #> 2264       183          4       1.000000e+00 #> 2265       183          5       1.000000e+00 #> 2266       183          6       1.000000e+00 #> 2267       183          7       1.000000e+00 #> 2268       183          8       1.000000e+00 #> 2269       183          9       1.000000e+00 #> 2270       183         10       9.949617e-01 #> 2271       183         11       4.082806e-03 #> 2272       183         12       1.000000e+00 #> 2273       183         13       1.000000e+00 #> 2274       183         14       1.000000e+00 #> 2275       183         15      2.431188e-189 #> 2276       183         16       1.000000e+00 #> 2277       183         17       9.949617e-01 #> 2278       183         18       2.951922e-03 #> 2279       184          1       9.965611e-01 #> 2280       184          2       1.000000e+00 #> 2281       184          3       2.618614e-55 #> 2282       184          4       1.000000e+00 #> 2283       184          5       1.000000e+00 #> 2284       184          6       1.000000e+00 #> 2285       184          7       1.000000e+00 #> 2286       184          8       1.000000e+00 #> 2287       184          9       2.618614e-55 #> 2288       184         10       9.957402e-01 #> 2289       184         11       1.000000e+00 #> 2290       184         12       1.000000e+00 #> 2291       184         13       4.259791e-03 #> 2292       185          1       1.000000e+00 #> 2293       185          2       9.924356e-01 #> 2294       185          3      1.640237e-277 #> 2295       185          4       1.000000e+00 #> 2296       185          5       1.000000e+00 #> 2297       185          6       5.586937e-03 #> 2298       185          7       0.000000e+00 #> 2299       185          8       1.000000e+00 #> 2300       186          1       5.038287e-03 #> 2301       186          2       1.000000e+00 #> 2302       186          3       1.105756e-43 #> 2303       186          4       9.963312e-01 #> 2304       186          5       1.947543e-80 #> 2305       186          6       1.000000e+00 #> 2306       186          7      1.560048e-275 #> 2307       186          8       1.105756e-43 #> 2308       186          9       1.000000e+00 #> 2309       186         10       6.845694e-03 #> 2310       186         11       1.947543e-80 #> 2311       186         12       5.397626e-45 #> 2312       186         13       1.000000e+00 #> 2313       186         14       1.000000e+00 #> 2314       187          1       9.959172e-01 #> 2315       187          2       1.000000e+00 #> 2316       187          3      1.912124e-105 #> 2317       187          4       1.000000e+00 #> 2318       187          5       1.000000e+00 #> 2319       187          6       1.000000e+00 #> 2320       187          7       1.000000e+00 #> 2321       187          8       1.000000e+00 #> 2322       187          9       9.959172e-01 #> 2323       187         10       1.000000e+00 #> 2324       187         11       1.000000e+00 #> 2325       187         12       1.000000e+00 #> 2326       187         13       9.967071e-01 #> 2327       187         14       1.000000e+00 #> 2328       187         15       1.000000e+00 #> 2329       187         16      1.912124e-105 #> 2330       188          1       1.000000e+00 #> 2331       188          2      1.464185e-190 #> 2332       188          3      1.464185e-190 #> 2333       188          4       1.000000e+00 #> 2334       188          5       1.000000e+00 #> 2335       188          6       1.000000e+00 #> 2336       188          7       1.000000e+00 #> 2337       188          8       1.000000e+00 #> 2338       188          9       9.949617e-01 #> 2339       188         10       1.000000e+00 #> 2340       188         11       1.000000e+00 #> 2341       188         12       1.000000e+00 #> 2342       188         13       1.000000e+00 #> 2343       188         14       9.949617e-01 #> 2344       189          1       8.348648e-03 #> 2345       189          2       8.957301e-45 #> 2346       189          3       1.000000e+00 #> 2347       189          4       9.916514e-01 #> 2348       189          5       1.000000e+00 #> 2349       189          6       1.000000e+00 #> 2350       189          7       1.000000e+00 #> 2351       189          8       7.627492e-80 #> 2352       189          9       1.250175e-81 #> 2353       189         10       9.916514e-01 #> 2354       189         11       1.000000e+00 #> 2355       189         12       1.250175e-81 #> 2356       189         13       1.000000e+00 #> 2357       190          1       1.000000e+00 #> 2358       190          2      2.476972e-284 #> 2359       190          3       1.000000e+00 #> 2360       190          4       9.203454e-03 #> 2361       190          5       9.907965e-01 #> 2362       190          6       1.000000e+00 #> 2363       190          7      1.204550e-282 #> 2364       190          8       1.000000e+00 #> 2365       190          9       1.000000e+00 #> 2366       190         10       1.000000e+00 #> 2367       190         11       1.000000e+00 #> 2368       190         12       6.845694e-03 #> 2369       190         13       1.000000e+00 #> 2370       191          1       1.000000e+00 #> 2371       191          2       1.000000e+00 #> 2372       191          3       5.038287e-03 #> 2373       191          4       9.949617e-01 #> 2374       191          5       1.000000e+00 #> 2375       191          6       6.845694e-03 #> 2376       191          7       1.000000e+00 #> 2377       191          8       1.184726e-50 #> 2378       191          9       1.000000e+00 #> 2379       191         10       9.949617e-01 #> 2380       191         11       9.959172e-01 #> 2381       191         12       1.000000e+00 #> 2382       191         13       3.474356e-50 #> 2383       191         14       1.000000e+00 #> 2384       192          1       4.082806e-03 #> 2385       192          2       1.000000e+00 #> 2386       192          3       1.000000e+00 #> 2387       192          4       3.292857e-03 #> 2388       192          5       1.000000e+00 #> 2389       192          6       1.000000e+00 #> 2390       192          7       1.000000e+00 #> 2391       192          8       1.000000e+00 #> 2392       192          9       3.292857e-03 #> 2393       192         10       9.959172e-01 #> 2394       192         11       1.000000e+00 #> 2395       193          1       1.000000e+00 #> 2396       193          2       0.000000e+00 #> 2397       193          3       0.000000e+00 #> 2398       193          4       0.000000e+00 #> 2399       193          5       0.000000e+00 #> 2400       193          6       0.000000e+00 #> 2401       193          7       5.586937e-03 #> 2402       193          8       0.000000e+00 #> 2403       193          9       1.000000e+00 #> 2404       193         10       0.000000e+00 #> 2405       193         11       1.000000e+00 #> 2406       193         12       0.000000e+00 #> 2407       193         13       9.924356e-01 #> 2408       193         14       4.538143e-03 #> 2409       193         15       4.538143e-03 #> 2410       193         16       1.000000e+00 #> 2411       193         17       7.564357e-03 #> 2412       193         18       1.000000e+00 #> 2413       194          1       1.000000e+00 #> 2414       194          2       1.000000e+00 #> 2415       194          3      2.701690e-116 #> 2416       194          4       1.320716e-25 #> 2417       194          5       1.224356e-02 #> 2418       194          6       2.111359e-51 #> 2419       194          7       1.000000e+00 #> 2420       194          8       9.916514e-01 #> 2421       194          9       4.233205e-26 #> 2422       194         10       2.111359e-51 #> 2423       194         11       5.913742e-25 #> 2424       194         12       1.320716e-25 #> 2425       195          1       9.954619e-01 #> 2426       195          2       1.000000e+00 #> 2427       195          3       1.000000e+00 #> 2428       195          4       1.000000e+00 #> 2429       195          5       1.000000e+00 #> 2430       195          6       9.944131e-01 #> 2431       195          7       1.000000e+00 #> 2432       195          8       5.586937e-03 #> 2433       195          9       1.000000e+00 #> 2434       195         10       1.000000e+00 #> 2435       195         11       1.000000e+00 #> 2436       195         12       7.564357e-03 #> 2437       195         13      6.756909e-142 #> 2438       195         14       1.000000e+00 #> 2439       196          1       1.000000e+00 #> 2440       196          2      5.548989e-260 #> 2441       196          3      1.338929e-261 #> 2442       196          5       1.000000e+00 #> 2443       196          6      3.429823e-195 #> 2444       196          7       1.000000e+00 #> 2445       196          8       1.000000e+00 #> 2446       196          9       9.888546e-01 #> 2447       196         10       1.000000e+00 #> 2448       196         11      7.201989e-193 #> 2449       196         12      2.922998e-194 #> 2450       197          1       1.000000e+00 #> 2451       197          2       1.000000e+00 #> 2452       197          3       1.569972e-69 #> 2453       197          4      2.760294e-118 #> 2454       197          5       1.000000e+00 #> 2455       197          6       2.951922e-03 #> 2456       197          7       1.000000e+00 #> 2457       197          8      2.760294e-118 #> 2458       197          9      1.454781e-117 #> 2459       197         10       1.000000e+00 #> 2460       197         11       9.970481e-01 #> 2461       198          1       1.000000e+00 #> 2462       198          2       1.000000e+00 #> 2463       198          3       1.000000e+00 #> 2464       198          4       1.000000e+00 #> 2465       198          5       9.976362e-01 #> 2466       198          6       1.000000e+00 #> 2467       198          7       1.000000e+00 #> 2468       198          8       1.000000e+00 #> 2469       198          9       1.000000e+00 #> 2470       198         10       2.951922e-03 #> 2471       198         11       2.951922e-03 #> 2472       199          1       1.000000e+00 #> 2473       199          2       9.931543e-01 #> 2474       199          3       6.845694e-03 #> 2475       199          4       2.816571e-51 #> 2476       199          5       8.941012e-90 #> 2477       199          6       1.000000e+00 #> 2478       199          7       1.000000e+00 #> 2479       199          8       1.000000e+00 #> 2480       199          9      1.562007e-233 #> 2481       199         10       9.203454e-03 #> 2482       199         12       1.000000e+00 #> 2483       199         13       1.000000e+00 #> 2484       200          1       5.586937e-03 #> 2485       200          2       9.944131e-01 #> 2486       200          3       1.870617e-63 #> 2487       200          4      9.169335e-105 #> 2488       200          5       1.000000e+00 #> 2489       200          6      3.304344e-283 #> 2490       200          7       1.000000e+00 #> 2491       200          8       1.000000e+00 #> 2492       200          9       5.586937e-03 #> 2493       200         10      1.594480e-281 #> 2494       200         11      9.169335e-105 #> 2495       200         12      1.912124e-105 #> 2496       201          1       1.000000e+00 #> 2497       201          2       1.000000e+00 #> 2498       201          3       1.000000e+00 #> 2499       201          4       1.000000e+00 #> 2500       201          5       9.924356e-01 #> 2501       201          6       1.000000e+00 #> 2502       201          7       1.000000e+00 #> 2503       201          8       9.963312e-01 #> 2504       201          9       9.963312e-01 #> 2505       202          1       3.152447e-03 #> 2506       202          2       3.152447e-03 #> 2507       202          3       1.000000e+00 #> 2508       202          4       1.000000e+00 #> 2509       202          5       1.000000e+00 #> 2510       202          6       9.956492e-01 #> 2511       202          7       1.000000e+00 #> 2512       203          1       1.000000e+00 #> 2513       203          2       9.949617e-01 #> 2514       203          3      2.145847e-197 #> 2515       203          4       9.931543e-01 #> 2516       203          5       9.959172e-01 #> 2517       203          6       0.000000e+00 #> 2518       203          7       1.000000e+00 #> 2519       203          8      2.731664e-137 #> 2520       203          9      2.145847e-197 #> 2521       203         10       4.082806e-03 #> 2522       203         11       1.000000e+00 #> 2523       203         12       0.000000e+00 #> 2524       203         13       0.000000e+00 #> 2525       204          1       1.000000e+00 #> 2526       204          2       2.420291e-56 #> 2527       204          3       9.021159e-96 #> 2528       204          4       1.179353e-02 #> 2529       204          5       1.000000e+00 #> 2530       204          6       1.000000e+00 #> 2531       204          7       1.776036e-94 #> 2532       204          8       8.026749e-03 #> 2533       204          9       9.946386e-01 #> 2534       204         10       1.000000e+00 #> 2535       204         11       1.000000e+00 #> 2536       204         12       1.000000e+00 #> 2537       204         13       1.776036e-94 #> 2538       204         14       1.000000e+00 #> 2539       204         15       4.488484e-97 #> 2540       204         16      4.253135e-255 #> 2541       205          1       1.000000e+00 #> 2542       205          2       1.000000e+00 #> 2543       205          3       9.931543e-01 #> 2544       205          4       6.845694e-03 #> 2545       205          5      3.923882e-159 #> 2546       205          6       1.000000e+00 #> 2547       205          7       1.000000e+00 #> 2548       205          8       1.000000e+00 #> 2549       205          9       1.000000e+00 #> 2550       205         10      3.923882e-159 #> 2551       205         11       1.000000e+00 #> 2552       205         12       1.000000e+00 #> 2553       205         13       6.845694e-03 #> 2554       205         14       1.000000e+00 #> 2555       205         15       1.000000e+00 #> 2556       206          1       9.907965e-01 #> 2557       206          2       4.442345e-78 #> 2558       206          3       1.000000e+00 #> 2559       206          4       6.504619e-77 #> 2560       206          5       1.472368e-02 #> 2561       206          6       2.099910e-02 #> 2562       206          7       8.959223e-47 #> 2563       206          8       1.000000e+00 #> 2564       206          9       1.000000e+00 #> 2565       206         10       4.442345e-78 #> 2566       206         11       4.442345e-78 #> 2567       206         12       1.472368e-02 #> 2568       206         13       1.000000e+00 #> 2569       206         14       1.000000e+00 #> 2570       206         15       1.000000e+00 #> 2571       206         16       1.472368e-02 #> 2572       206         17       1.000000e+00 #> 2573       207          1       2.111501e-03 #> 2574       207          2       9.978885e-01 #> 2575       207          3       9.983213e-01 #> 2576       207          4       1.000000e+00 #> 2577       207          5       1.000000e+00 #> 2578       207          6       1.678742e-03 #> 2579       207          7       1.000000e+00 #> 2580       207         10       3.775313e-16 #> 2581       208          1       1.000000e+00 #> 2582       208          2       1.000000e+00 #> 2583       208          3       1.000000e+00 #> 2584       208          4       1.000000e+00 #> 2585       208          5       1.000000e+00 #> 2586       208          6       1.000000e+00 #> 2587       208          7       6.188020e-03 #> 2588       208          8       9.963312e-01 #> 2589       208          9       9.963312e-01 #> 2590       208         10       1.000000e+00 #> 2591       208         11       1.000000e+00 #> 2592       208         12       5.038287e-03 #> 2593       209          1       5.038287e-03 #> 2594       209          2       9.949617e-01 #> 2595       209          3       1.000000e+00 #> 2596       209          4       1.000000e+00 #> 2597       209          5       1.000000e+00 #> 2598       209          6       1.000000e+00 #> 2599       209          7       1.000000e+00 #> 2600       209          8       9.970481e-01 #> 2601       209          9       1.000000e+00 #> 2602       209         10       2.951922e-03 #> 2603       210          1       1.000000e+00 #> 2604       210          2       1.000000e+00 #> 2605       210          3       1.169973e-32 #> 2606       210          4       1.000000e+00 #> 2607       210          5       2.961972e-98 #> 2608       210          6       1.000000e+00 #> 2609       210          7       1.000000e+00 #> 2610       210          8       1.000000e+00 #> 2611       210          9       9.973569e-01 #> 2612       210         10       1.480073e-10 #> 2613       210         11       3.210974e-33 #> 2614       210         12       2.961972e-98 #> 2615       210         13       1.480073e-10 #> 2616       210         14       3.096922e-54 #> 2617       211          1       1.000000e+00 #> 2618       211          2       1.000000e+00 #> 2619       211          3       1.000000e+00 #> 2620       211          4      6.696751e-134 #> 2621       211          5       9.358014e-83 #> 2622       211          6       1.000000e+00 #> 2623       211          7      1.912210e-135 #> 2624       211          8      1.912210e-135 #> 2625       212          1       2.643133e-03 #> 2626       212          2       1.000000e+00 #> 2627       212          3       1.000000e+00 #> 2628       212          4       1.000000e+00 #> 2629       212          5       1.000000e+00 #> 2630       212          6       1.146896e-89 #> 2631       212          7       1.000000e+00 #> 2632       212          8       1.000000e+00 #> 2633       212          9      6.874275e-146 #> 2634       212         10       9.973569e-01 #> 2635       212         11       1.000000e+00 #> 2636       213          1       9.938120e-01 #> 2637       213          2       7.564357e-03 #> 2638       213          3       9.189175e-33 #> 2639       213          4       1.000000e+00 #> 2640       213          5       1.000000e+00 #> 2641       213          6       9.189175e-33 #> 2642       213          7       6.188020e-03 #> 2643       213          8      4.645178e-149 #> 2644       213         10       7.754961e-32 #> 2645       213         11       6.188020e-03 #> 2646       213         12       1.000000e+00 #> 2647       214          1       8.681827e-03 #> 2648       214          2       4.732621e-03 #> 2649       214          3       1.000000e+00 #> 2650       214          4       1.736334e-96 #> 2651       214          5       4.790294e-56 #> 2652       214          6       8.661912e-57 #> 2653       214          7       1.000000e+00 #> 2654       214          8       9.935559e-01 #> 2655       214          9       6.444058e-03 #> 2656       214         10       0.000000e+00 #> 2657       214         11       1.000000e+00 #> 2658       214         12      1.854094e-254 #> 2659       214         13       1.000000e+00 #> 2660       214         14       1.000000e+00 #> 2661       215          1       9.949617e-01 #> 2662       215          2       9.203454e-03 #> 2663       215          3       1.000000e+00 #> 2664       215          4       1.000000e+00 #> 2665       215          5       3.644845e-55 #> 2666       215          6       1.000000e+00 #> 2667       215          7       1.000000e+00 #> 2668       215          8       2.458178e-92 #> 2669       215          9       1.000000e+00 #> 2670       215         10       9.907965e-01 #> 2671       216          1       1.000000e+00 #> 2672       216          2       9.954619e-01 #> 2673       216          3       6.188020e-03 #> 2674       216          4       1.000000e+00 #> 2675       216          5       7.627492e-80 #> 2676       216          6       4.062041e-44 #> 2677       216          7       7.627492e-80 #> 2678       216          8       1.000000e+00 #> 2679       216          9       1.000000e+00 #> 2680       216         10      2.295383e-204 #> 2681       216         11       9.821975e-81 #> 2682       217          1       1.000000e+00 #> 2683       217          2       1.000000e+00 #> 2684       217          3       1.000000e+00 #> 2685       217          4       2.643133e-03 #> 2686       217          5       1.000000e+00 #> 2687       217          6       9.967071e-01 #> 2688       217          7       4.672523e-83 #> 2689       217          8       1.000000e+00 #> 2690       217          9       4.672523e-83 #> 2691       217         10       1.000000e+00 #> 2692       217         11       9.973569e-01 #> 2693       217         12       1.000000e+00 #> 2694       217         13       2.643133e-03 #> 2695       217         14      2.758188e-134 #> 2696       217         15       1.000000e+00 #> 2697       218          1       9.938120e-01 #> 2698       218          2      9.510819e-133 #> 2699       218          3       1.000000e+00 #> 2700       218          4       1.000000e+00 #> 2701       218          5       6.188020e-03 #> 2702       218          6       5.038287e-03 #> 2703       218          7       1.000000e+00 #> 2704       218          8      5.541761e-132 #> 2705       218          9       1.723098e-85 #> 2706       219          1       1.224356e-02 #> 2707       219          2       1.224356e-02 #> 2708       219          3       1.000000e+00 #> 2709       219          4       9.838819e-01 #> 2710       219          5       1.000000e+00 #> 2711       219          6      2.515876e-170 #> 2712       219          7       0.000000e+00 #> 2713       219          8       1.000000e+00 #> 2714       219          9      2.515876e-170 #> 2715       220          1       1.000000e+00 #> 2716       220          2       1.000000e+00 #> 2717       220          3       1.000000e+00 #> 2718       220          4       1.114540e-02 #> 2719       220          5       5.889765e-19 #> 2720       220          6       1.000000e+00 #> 2721       220          7       1.000000e+00 #> 2722       220          8       1.114540e-02 #> 2723       220          9       1.000000e+00 #> 2724       220         10       1.000000e+00 #> 2725       220         11       1.000000e+00 #> 2726       220         12       1.534833e-18 #> 2727       220         13       1.000000e+00 #> 2728       220         14       1.472368e-02 #> 2729       221          1       1.013391e-02 #> 2730       221          2       9.898661e-01 #> 2731       221          3      4.133120e-308 #> 2732       221          4       1.000000e+00 #> 2733       221          5       0.000000e+00 #> 2734       221          6       9.931543e-01 #> 2735       221          7      1.846115e-310 #> 2736       221          8       0.000000e+00 #> 2737       221          9       1.000000e+00 #> 2738       221         10       1.000000e+00 #> 2739       221         11       0.000000e+00 #> 2740       221         12       1.000000e+00 #> 2741       221         13       1.000000e+00 #> 2742       222          1       1.000000e+00 #> 2743       222          2       1.000000e+00 #> 2744       222          3       2.951922e-03 #> 2745       222          4       5.997204e-37 #> 2746       222          5       1.000000e+00 #> 2747       222          6       6.066904e-12 #> 2748       222          7       2.858287e-12 #> 2749       222          8       1.000000e+00 #> 2750       222          9       1.000000e+00 #> 2751       223          1       1.000000e+00 #> 2752       223          2       1.000000e+00 #> 2753       223          3       1.000000e+00 #> 2754       223          4       4.082806e-03 #> 2755       223          5       7.949139e-65 #> 2756       223          6       5.586937e-03 #> 2757       223          7       3.661725e-66 #> 2758       223          8       1.000000e+00 #> 2759       223          9       1.000000e+00 #> 2760       223         10      2.960659e-108 #> 2761       223         11       9.944131e-01 #> 2762       223         12       1.000000e+00 #> 2763       223         13       6.845694e-03 #> 2764       223         14       1.000000e+00 #> 2765       224          1       1.000000e+00 #> 2766       224          2       1.000000e+00 #> 2767       224          3      2.013661e-275 #> 2768       224          4       1.000000e+00 #> 2769       224          5       1.000000e+00 #> 2770       224          6       0.000000e+00 #> 2771       224          7       9.966349e-01 #> 2772       224          8      4.938674e-203 #> 2773       224          9       0.000000e+00 #> 2774       224         10       1.000000e+00 #> 2775       224         11      1.308209e-201 #> 2776       224         12      2.575882e-279 #> 2777       224         13       1.000000e+00 #> 2778       224         14       0.000000e+00 #> 2779       225          1       9.963312e-01 #> 2780       225          2       1.000000e+00 #> 2781       225          3       1.000000e+00 #> 2782       225          4       1.000000e+00 #> 2783       225          5       1.000000e+00 #> 2784       225          6       5.038287e-03 #> 2785       225          7       1.000000e+00 #> 2786       225          8       1.000000e+00 #> 2787       225          9       5.038287e-03 #> 2788       225         10       1.000000e+00 #> 2789       225         11       1.000000e+00 #> 2790       225         12       9.970481e-01 #> 2791       226          1       1.000000e+00 #> 2792       226          2       1.000000e+00 #> 2793       226          3       9.970481e-01 #> 2794       226          4       9.970481e-01 #> 2795       226          5       7.617532e-67 #> 2796       226          6       7.617532e-67 #> 2797       226          7       3.668799e-03 #> 2798       226          8       5.513604e-33 #> 2799       226          9       2.321035e-33 #> 2800       226         10      8.647326e-156 #> 2801       226         11      1.271916e-156 #> 2802       226         12       1.000000e+00 #> 2803       226         13       6.278604e-34 #> 2804       226         14       2.321035e-33 #> 2805       226         15       9.963312e-01 #> 2806       226         16       1.000000e+00 #> 2807       227          1       9.944131e-01 #> 2808       227          2      1.773144e-301 #> 2809       227          3       9.931543e-01 #> 2810       227          4       1.000000e+00 #> 2811       227          5      1.385760e-298 #> 2812       227          6       1.000000e+00 #> 2813       227          7       0.000000e+00 #> 2814       227          8       0.000000e+00 #> 2815       227          9       6.845694e-03 #> 2816       227         10      1.385760e-298 #> 2817       227         11       5.586937e-03 #> 2818       227         12      9.687137e-300 #> 2819       227         13       0.000000e+00 #> 2820       227         14       0.000000e+00 #> 2821       227         15      9.687137e-300 #> 2822       227         16      1.385760e-298 #> 2823       227         17       1.000000e+00 #> 2824       228          1       1.000000e+00 #> 2825       228          2       4.538143e-03 #> 2826       228          3       1.000000e+00 #> 2827       228          4       1.000000e+00 #> 2828       228          5       1.000000e+00 #> 2829       228          6       9.954619e-01 #> 2830       228          7       1.000000e+00 #> 2831       228          8       9.907965e-01 #> 2832       228          9       1.000000e+00 #> 2833       228         10       1.000000e+00 #> 2834       228         11       1.000000e+00 #> 2835       228         12       1.000000e+00 #> 2836       228         13       1.000000e+00 #> 2837       228         14       9.907965e-01 #> 2838       228         15       1.000000e+00 #> 2839       228         16       9.907965e-01 #> 2840       228         17       1.000000e+00 #> 2841       229          1       1.000000e+00 #> 2842       229          2       9.898661e-01 #> 2843       229          3       1.000000e+00 #> 2844       229          4       1.000000e+00 #> 2845       229          5      3.837518e-109 #> 2846       229          6       1.000000e+00 #> 2847       229          7       1.000000e+00 #> 2848       229          8       1.000000e+00 #> 2849       229          9       5.038287e-03 #> 2850       230          1       1.000000e+00 #> 2851       230          2       6.575557e-03 #> 2852       230          3       8.852747e-03 #> 2853       230          4       1.000000e+00 #> 2854       230          5       1.000000e+00 #> 2855       230          6       1.000000e+00 #> 2856       230          7       1.000000e+00 #> 2857       230          8       9.951674e-01 #> 2858       230          9       1.000000e+00 #> 2859       230         10       1.000000e+00 #> 2860       230         11       9.951674e-01 #> 2861       230         12       1.147659e-79 #> 2862       230         13       9.951674e-01 #> 2863       230         14       1.147659e-79 #> 2864       230         15       9.934244e-01 #> 2865       231          1       1.000000e+00 #> 2866       231          2       9.954619e-01 #> 2867       231          3      3.347008e-120 #> 2868       231          4       1.000000e+00 #> 2869       231          5       1.000000e+00 #> 2870       231          6       0.000000e+00 #> 2871       231          7       4.538143e-03 #> 2872       231          8       1.000000e+00 #> 2873       231          9      2.684097e-121 #> 2874       231         10       1.000000e+00 #> 2875       231         11       5.985965e-75 #> 2876       231         12       1.000000e+00 #> 2877       231         13       0.000000e+00 #> 2878       231         14       1.000000e+00 #> 2879       231         15       1.000000e+00 #> 2880       232          1       1.000000e+00 #> 2881       232          2       1.503028e-33 #> 2882       232          3       1.000000e+00 #> 2883       232          4      1.490370e-159 #> 2884       232          6       1.000000e+00 #> 2885       232          7       5.586937e-03 #> 2886       232          8       1.000000e+00 #> 2887       232          9       4.050172e-34 #> 2888       232         10      1.733991e-221 #> 2889       232         11       1.000000e+00 #> 2890       233          1       1.000000e+00 #> 2891       233          2       1.000000e+00 #> 2892       233          3       1.000000e+00 #> 2893       233          4       1.000000e+00 #> 2894       233          5       1.000000e+00 #> 2895       233          6       9.944131e-01 #> 2896       233          7       1.000000e+00 #> 2897       233          8       1.000000e+00 #> 2898       233          9       2.951922e-03 #> 2899       233         10       2.951922e-03 #> 2900       234          1       1.000000e+00 #> 2901       234          2       9.963312e-01 #> 2902       234          3       1.000000e+00 #> 2903       234          4       1.000000e+00 #> 2904       234          5       1.000000e+00 #> 2905       234          6       1.000000e+00 #> 2906       234          7       1.000000e+00 #> 2907       234          8       9.976362e-01 #> 2908       234          9       1.000000e+00 #> 2909       234         10       1.000000e+00 #> 2910       234         11       9.976362e-01 #> 2911       234         12       2.363822e-03 #> 2912       234         13       1.000000e+00 #> 2913       234         14       1.000000e+00 #> 2914       235          1       9.985058e-01 #> 2915       235          2       1.000000e+00 #> 2916       235          3       1.000000e+00 #> 2917       235          4       1.000000e+00 #> 2918       235          5       4.842040e-84 #> 2919       235          6       2.921473e-85 #> 2920       235          7       1.192440e-84 #> 2921       235          8       1.883857e-03 #> 2922       235          9       1.000000e+00 #> 2923       235         10       1.883857e-03 #> 2924       235         11       1.000000e+00 #> 2925       235         12       1.494166e-03 #> 2926       235         13       1.000000e+00 #> 2927       235         14       1.000000e+00 #> 2928       235         15       9.985058e-01 #> 2929       235         16       1.494166e-03"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Define choice response — choice_responses","title":"Define choice response — choice_responses","text":"choice_responses object defines observed discrete responses. Additional response columns (example ranked choice indicators) preserved can merged covariates downstream. generate_choice_responses() simulates choices","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define choice response — choice_responses","text":"","code":"choice_responses(   data_frame,   column_choice = \"choice\",   column_decider = \"deciderID\",   column_occasion = NULL,   cross_section = FALSE )  generate_choice_responses(   choice_effects,   choice_covariates = generate_choice_covariates(choice_effects = choice_effects),   choice_parameters = generate_choice_parameters(choice_effects = choice_effects),   choice_identifiers = extract_choice_identifiers(choice_covariates),   choice_preferences = generate_choice_preferences(choice_parameters = choice_parameters,     choice_effects = choice_effects, choice_identifiers = choice_identifiers),   column_choice = \"choice\",   choice_type = c(\"auto\", \"discrete\", \"ordered\", \"ranked\") )"},{"path":"http://loelschlaeger.de/choicedata/reference/choice_responses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define choice response — choice_responses","text":"data_frame [data.frame] Contains choice responses. column_choice [character(1)] column name data_frame choice responses. column_decider [character(1)] name identifier column deciders. column_occasion [character(1) | NULL] name identifier column choice occasions (panel data). Can NULL cross-sectional case. cross_section [logical(1)] Treat choice data cross-sectional? choice_effects [choice_effects] choice_effects object describing model structure. choice_covariates [choice_covariates] Covariates used construct utilities. choice_parameters [choice_parameters] Model parameters supplying mean covariance components. choice_identifiers [choice_identifiers] Identifiers describing panel cross-sectional structure. choice_preferences [choice_preferences] Preference draws simulate choices. choice_type [character(1)] response type simulate. Use \"auto\" (default) derive type choice_alternatives, explicitly request \"discrete\", \"ordered\", \"ranked\" outcomes.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_responses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define choice response — choice_responses","text":"data.frame.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choice_responses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define choice response — choice_responses","text":"","code":"choice_effects <- choice_effects(   choice_formula = choice_formula(     formula = choice ~ price | time,     error_term = \"probit\"   ),   choice_alternatives = choice_alternatives(J = 5) ) generate_choice_responses(choice_effects = choice_effects) #> # A tibble: 100 × 3 #>    deciderID occasionID choice #>  * <chr>     <chr>      <chr>  #>  1 1         1          C      #>  2 2         1          C      #>  3 3         1          A      #>  4 4         1          C      #>  5 5         1          E      #>  6 6         1          C      #>  7 7         1          D      #>  8 8         1          A      #>  9 9         1          C      #> 10 10        1          C      #> # ℹ 90 more rows"},{"path":"http://loelschlaeger.de/choicedata/reference/choicedata-package.html","id":null,"dir":"Reference","previous_headings":"","what":"choicedata: Working with Choice Data in R — choicedata-package","title":"choicedata: Working with Choice Data in R — choicedata-package","text":"Offers set objects tailored simplify working choice data R. enables computation choice probabilities likelihood various types choice models based given data.","code":""},{"path":[]},{"path":"http://loelschlaeger.de/choicedata/reference/choicedata-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"choicedata: Working with Choice Data in R — choicedata-package","text":"Maintainer: Lennart Oelschläger oelschlaeger.lennart@gmail.com (ORCID)","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choiceprob_logit.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate logit choice probabilities — choiceprob_logit","title":"Calculate logit choice probabilities — choiceprob_logit","text":"helper functions compute logit choice probabilities unordered ordered outcomes. Panel inputs reuse observation-level logit formulae, remain valid logit error term independent across occasions. Latent class models supported via weighted averages class-specific probabilities. Omega supplied, coefficients assumed follow multivariate normal distribution resulting probabilities evaluated averaging simulation draws.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choiceprob_logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate logit choice probabilities — choiceprob_logit","text":"","code":"choiceprob_logit(   X,   y = NULL,   Tp = NULL,   beta,   Omega = NULL,   gamma = NULL,   weights = NULL,   input_checks = TRUE,   ordered = !is.null(gamma),   ranked = !ordered && !is.null(y) && length(y) > 0 && length(y[[1]]) > 1,   panel = !is.null(Tp) && any(Tp > 1),   lc = !is.null(weights),   draws = NULL,   n_draws = 200 )"},{"path":"http://loelschlaeger.de/choicedata/reference/choiceprob_logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate logit choice probabilities — choiceprob_logit","text":"X [list(N)] list length N (number observations) design matrices, dimension J (number alternatives) times P (number effects). ordered case (ordered = TRUE), design matrices dimension 1 times P. y [list(N) | NULL] list length N (number observations) single integers 1 J (number alternatives). ranked case (ranked = TRUE), list entries must permutation 1:J, higher-ranked alternatives front. non-panel case (panel = FALSE), y can also NULL, case probabilities calculated choice alternatives. ranked case (ranked = TRUE), y NULL, first place choice probabilities computed, equivalent computing choice probabilities regular (maximum utility) model. Tp [NULL | integer(N)] panel identifier length N (number observations) panel data. number Tp[1] indicates, first Tp[1] observations X y belong decider 1, next Tp[2] observations belong decider 2, . Can NULL panel data. beta [numeric(P) | list] coefficient vector length P (number effects) computing systematic utility \\(V = X\\beta\\). latent class case (lc = TRUE), beta list length C coefficients, C number latent classes. Omega [matrix(nrow = P_r, ncol = P_r) | NULL | list] covariance matrix random effects dimension P_r times P_r, P_r less P number random effects. Can NULL random effects. latent class case (lc = TRUE), Omega list length C covariance matrices, C number latent classes. gamma [NULL | numeric(J - 1)] relevant ordered case (ordered = TRUE). defines non-decreasing boundaries utility categories. event \\(U \\leq \\gamma_j\\) means alternative \\(j\\) chosen, \\(U > \\gamma_{J - 1}\\) means alternative \\(J\\) chosen. weights [NULL | numeric()] Optional class weights latent class specifications. input_checks [logical(1)] Perform input checks. Set FALSE skip . ordered, ranked, panel, lc [logical(1)] Flags indicating whether specification ordered, ranked, panel, latent class. defaults inferred inputs callers typically need override . draws [NULL | matrix | list] Optional simulation draws random coefficients Omega NULL. matrix provides shared draws classes; list can supply class-specific draw matrices. n_draws [integer(1)] Number draws generate draws NULL Omega provided.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choiceprob_logit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate logit choice probabilities — choiceprob_logit","text":"numeric vector choice probabilities observed choices y supplied. y NULL, matrix one row per observation one column per alternative returned.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choiceprob_probit.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate probit choice probabilities — choiceprob_probit","title":"Calculate probit choice probabilities — choiceprob_probit","text":"helper functions calculate probit choice probabilities various scenarios: regular (choiceprob_mnp_*), ordered (*_ordered), ranked (ranked = TRUE) case, normally mixed (choiceprob_mmnp_*) latent class (*_lc) case, panel data (*_panel), based full likelihood (cml = \"\"), full pairwise composite marginal likelihood (cml = \"fp\"), adjacent pairwise composite marginal likelihood (cml = \"ap\"), observed choices alternatives (y NULL). function choiceprob_probit() general API calls specialized functions can perform input checks.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choiceprob_probit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate probit choice probabilities — choiceprob_probit","text":"","code":"choiceprob_probit(   X,   y = NULL,   Tp = NULL,   cml = \"no\",   beta,   Omega = NULL,   Sigma,   gamma = NULL,   weights = NULL,   re_position = utils::tail(seq_along(beta), nrow(Omega)),   gcdf = pmvnorm_cdf_default,   lower_bound = 0,   input_checks = TRUE,   ordered = !is.null(gamma),   ranked = if (!ordered && !is.null(y) && isTRUE(length(y) > 0)) {      length(y[[1]]) >     1  } else {      FALSE  },   mixed = !is.null(Omega),   panel = mixed & !is.null(Tp) & any(Tp > 1),   lc = !is.null(weights) )  choiceprob_mnp(   X,   y,   beta,   Sigma,   gcdf = pmvnorm_cdf_default,   lower_bound = 0,   ranked = FALSE )  choiceprob_mnp_ordered(X, y, beta, Sigma, gamma, lower_bound = 0)  choiceprob_mmnp(   X,   y,   beta,   Omega,   Sigma,   re_position = utils::tail(seq_along(beta), nrow(Omega)),   gcdf = pmvnorm_cdf_default,   lower_bound = 0,   ranked = FALSE )  choiceprob_mmnp_ordered(   X,   y,   beta,   Omega,   Sigma,   gamma,   re_position = utils::tail(seq_along(beta), nrow(Omega)),   lower_bound = 0 )  choiceprob_mmnp_lc(   X,   y,   beta,   Omega,   Sigma,   weights,   re_position = utils::tail(seq_along(beta[[1]]), nrow(Omega[[1]])),   gcdf = pmvnorm_cdf_default,   lower_bound = 0,   ranked = FALSE )  choiceprob_mmnp_ordered_lc(   X,   y,   beta,   Omega,   Sigma,   gamma,   weights,   re_position = utils::tail(seq_along(beta[[1]]), nrow(Omega[[1]])),   lower_bound = 0 )  choiceprob_mmnp_panel(   X,   y,   Tp,   cml,   beta,   Omega,   Sigma,   re_position = utils::tail(seq_along(beta), nrow(Omega)),   gcdf = pmvnorm_cdf_default,   lower_bound = 0,   ranked = FALSE )  choiceprob_mmnp_ordered_panel(   X,   y,   Tp,   cml,   beta,   Omega,   Sigma,   gamma,   re_position = utils::tail(seq_along(beta), nrow(Omega)),   gcdf = pmvnorm_cdf_default,   lower_bound = 0 )  choiceprob_mmnp_panel_lc(   X,   y,   Tp,   cml,   beta,   Omega,   Sigma,   weights,   re_position = utils::tail(seq_along(beta), nrow(Omega)),   gcdf = pmvnorm_cdf_default,   lower_bound = 0,   ranked = FALSE )  choiceprob_mmnp_ordered_panel_lc(   X,   y,   Tp,   cml,   beta,   Omega,   Sigma,   gamma,   weights,   re_position = utils::tail(seq_along(beta), nrow(Omega)),   gcdf = pmvnorm_cdf_default,   lower_bound = 0 )"},{"path":"http://loelschlaeger.de/choicedata/reference/choiceprob_probit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate probit choice probabilities — choiceprob_probit","text":"X [list(N)] list length N (number observations) design matrices, dimension J (number alternatives) times P (number effects). ordered case (ordered = TRUE), design matrices dimension 1 times P. y [list(N) | NULL] list length N (number observations) single integers 1 J (number alternatives). ranked case (ranked = TRUE), list entries must permutation 1:J, higher-ranked alternatives front. non-panel case (panel = FALSE), y can also NULL, case probabilities calculated choice alternatives. ranked case (ranked = TRUE), y NULL, first place choice probabilities computed, equivalent computing choice probabilities regular (maximum utility) model. Tp [NULL | integer(N)] panel identifier length N (number observations) panel data. number Tp[1] indicates, first Tp[1] observations X y belong decider 1, next Tp[2] observations belong decider 2, . Can NULL panel data. cml [character(1)] composite marginal likelihood (CML) type panel data. can one \"\" (full likelihood), \"fp\" (full pairwise), \"ap\" (adjacent pairwise). beta [numeric(P) | list] coefficient vector length P (number effects) computing systematic utility \\(V = X\\beta\\). latent class case (lc = TRUE), beta list length C coefficients, C number latent classes. Omega [matrix(nrow = P_r, ncol = P_r) | NULL | list] covariance matrix random effects dimension P_r times P_r, P_r less P number random effects. Can NULL random effects. latent class case (lc = TRUE), Omega list length C covariance matrices, C number latent classes. Sigma [matrix(nrow = J, ncol = J) | numeric(1)] covariance matrix dimension J times J (number alternatives) Gaussian error term \\(\\epsilon = U - V\\). ordered case (ordered = TRUE), Sigma single, non-negative numeric. gamma [NULL | numeric(J - 1)] relevant ordered case (ordered = TRUE). defines non-decreasing boundaries utility categories. event \\(U \\leq \\gamma_j\\) means alternative \\(j\\) chosen, \\(U > \\gamma_{J - 1}\\) means alternative \\(J\\) chosen. weights [NULL | numeric(C)] weights latent classes latent class case (lc = TRUE). re_position [integer(P_r)] index positions random effects coefficient vector beta. default, last \\(P_r\\) entries beta considered random, \\(P_r\\) dimension Omega. gcdf [function(upper, corr)] function computes (approximates) centered Gaussian CDF (mean zero) based upper integration limit upper correlation matrix corr. output expected single numeric value zero one. -panel (panel = FALSE) ordered case (ordered = TRUE), stats::pnorm() used calculate one-dimensional Gaussian CDF. lower_bound [numeric(1)] lower bound probabilities numerical reasons. Probabilities returned max(prob, lower_bound). input_checks [logical(1)] Perform input checks. Set FALSE skip . ordered, ranked, mixed, panel, lc [logical(1)] Flags indicating model type. determined automatically based input arguments.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/choiceprob_probit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate probit choice probabilities — choiceprob_probit","text":"numeric vector length N, probabilities observed choices y. panel case (panel = TRUE), probabilities observed choice sequence length length(Tp). y NULL non-panel case (panel = FALSE), matrix dimension N times J, probabilities alternatives. ranked case (ranked = TRUE), first place choice probabilities computed, equivalent computing choice probabilities regular (maximum utility) model.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/compute_P.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of model effects — compute_P","title":"Number of model effects — compute_P","text":"helper functions count number model effects: compute_P() returns total number P model effects. compute_P_d() returns number P_d non-random effects. compute_P_r() returns number P_r random effects.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/compute_P.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of model effects — compute_P","text":"","code":"compute_P(choice_effects)  compute_P_d(choice_effects)  compute_P_r(choice_effects)"},{"path":"http://loelschlaeger.de/choicedata/reference/compute_P.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of model effects — compute_P","text":"choice_effects [choice_effects] choice_effects object.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/compute_P.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of model effects — compute_P","text":"integer, number model effects.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/decider_identifiers_to_cross_section.html","id":null,"dir":"Reference","previous_headings":"","what":"Unique decider identifiers in cross-sectional case — decider_identifiers_to_cross_section","title":"Unique decider identifiers in cross-sectional case — decider_identifiers_to_cross_section","text":"helper function makes unique decider identifiers given combination decider occasion identifiers.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/decider_identifiers_to_cross_section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unique decider identifiers in cross-sectional case — decider_identifiers_to_cross_section","text":"","code":"decider_identifiers_to_cross_section(   decider_identifiers,   occasion_identifiers,   delimiter = \".\" )"},{"path":"http://loelschlaeger.de/choicedata/reference/decider_identifiers_to_cross_section.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unique decider identifiers in cross-sectional case — decider_identifiers_to_cross_section","text":"decider_identifiers, occasion_identifiers [atomic()] atomic vector identifiers.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/decider_identifiers_to_cross_section.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unique decider identifiers in cross-sectional case — decider_identifiers_to_cross_section","text":"atomic vector unique identifiers.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/expand_Tp.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand Tp — expand_Tp","title":"Expand Tp — expand_Tp","text":"helper function expands number choice occasions Tp vector length N.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/expand_Tp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand Tp — expand_Tp","text":"","code":"expand_Tp(N = length(Tp), Tp = 1)"},{"path":"http://loelschlaeger.de/choicedata/reference/expand_Tp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand Tp — expand_Tp","text":"N [integer(1)] number deciders. Tp [integer(1) | integer(N)] number choice occasions per decider. Can also length N variable number choice occasions per decider.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/expand_Tp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand Tp — expand_Tp","text":"integer vector length N.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/get_decider_identifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get decider identifiers — get_decider_identifiers","title":"Get decider identifiers — get_decider_identifiers","text":"helper function extracts (unique) decider identifiers choice_identifiers object.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/get_decider_identifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get decider identifiers — get_decider_identifiers","text":"","code":"get_decider_identifiers(choice_identifiers)"},{"path":"http://loelschlaeger.de/choicedata/reference/get_decider_identifiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get decider identifiers — get_decider_identifiers","text":"choice_identifiers [choice_identifiers] choice_identifiers object.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/get_decider_identifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get decider identifiers — get_decider_identifiers","text":"atomic vector decider identifiers.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/get_position_from_identifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Get identifier position — get_position_from_identifier","title":"Get identifier position — get_position_from_identifier","text":"helper function gets position based decider choice occasion number.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/get_position_from_identifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get identifier position — get_position_from_identifier","text":"","code":"get_position_from_identifier(   N = length(Tp),   Tp = 1,   decider_number,   occasion_number )"},{"path":"http://loelschlaeger.de/choicedata/reference/get_position_from_identifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get identifier position — get_position_from_identifier","text":"N [integer(1)] number deciders. Tp [integer(1) | integer(N)] number choice occasions per decider. Can also length N variable number choice occasions per decider. decider_number [integer(1)] decider number, number 1 N. occasion_number [integer(1)] occasion number decider n, number 1 Tp[n].","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/get_position_from_identifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get identifier position — get_position_from_identifier","text":"integer position.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/read_Tp.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Tp — read_Tp","title":"Read Tp — read_Tp","text":"helper function reads number choice occasions Tp choice_identifiers object.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/read_Tp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Tp — read_Tp","text":"","code":"read_Tp(choice_identifiers)"},{"path":"http://loelschlaeger.de/choicedata/reference/read_Tp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Tp — read_Tp","text":"choice_identifiers [choice_identifiers] choice_identifiers object defines choice occasions.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/read_Tp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Tp — read_Tp","text":"integer vector length N, N number deciders.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/train_choice.html","id":null,"dir":"Reference","previous_headings":"","what":"Stated Preferences for Train Traveling — train_choice","title":"Stated Preferences for Train Traveling — train_choice","text":"Data set 2929 stated choices 235 Dutch individuals deciding two hypothetical train trip options \"\" \"B\" based price, travel time, number rail--rail transfers (changes), level comfort. data obtained 1987 Hague Consulting Group National Dutch Railways. Prices recorded Dutch guilder data set transformed Euro exchange rate 2.20371 guilders = 1 Euro.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/train_choice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stated Preferences for Train Traveling — train_choice","text":"","code":"train_choice"},{"path":"http://loelschlaeger.de/choicedata/reference/train_choice.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stated Preferences for Train Traveling — train_choice","text":"tibble 2929 rows 11 columns: deciderID [integer] identifier decider. occasionID [integer] identifier choice occasion. choice [character] chosen alternative, either \"\" \"B\". price_A [numeric] price alternative \"\" Euro. time_A [numeric] travel time alternative \"\" hours. change_A [integer] number changes alternative \"\". comfort_A [factor] comfort level alternative \"\", 0 best comfort 2 worst. price_B [numeric] price alternative \"B\" Euro. time_B [numeric] travel time alternative \"B\" hours. change_B [integer] number changes alternative \"B\". comfort_B [factor] comfort level alternative \"B\", 0 best comfort 2 worst.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/train_choice.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Stated Preferences for Train Traveling — train_choice","text":"Ben-Akiva M, Bolduc D, Bradley M (1993). “Estimation travel choice models randomly distributed values time.” Transportation Research Record, 1413.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/travel_mode_choice.html","id":null,"dir":"Reference","previous_headings":"","what":"Revealed Preferences for Travel Mode Choice — travel_mode_choice","title":"Revealed Preferences for Travel Mode Choice — travel_mode_choice","text":"Data set revealed choices 210 travelers Sydney Melbourne report choice four travel modes plane, train, bus, car. data collected part 1987 intercity mode choice study.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/travel_mode_choice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Revealed Preferences for Travel Mode Choice — travel_mode_choice","text":"","code":"travel_mode_choice"},{"path":"http://loelschlaeger.de/choicedata/reference/travel_mode_choice.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Revealed Preferences for Travel Mode Choice — travel_mode_choice","text":"tibble 840 rows 8 columns: individual [integer] identifier decider. mode [character] travel mode. choice [integer] Whether mode chosen. wait [integer] terminal waiting time, 0 car. cost [integer] travel cost dollars. travel [integer] travel time minutes. income [integer] household income thousand dollars. size [integer] traveling group size.","code":""},{"path":"http://loelschlaeger.de/choicedata/reference/travel_mode_choice.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Revealed Preferences for Travel Mode Choice — travel_mode_choice","text":"Ben-Akiva M, Bolduc D, Bradley M (1993). “Estimation travel choice models randomly distributed values time.” Transportation Research Record, 1413.","code":""},{"path":"http://loelschlaeger.de/choicedata/news/index.html","id":"choicedata-010","dir":"Changelog","previous_headings":"","what":"choicedata 0.1.0","title":"choicedata 0.1.0","text":"Initial CRAN submission.","code":""}]
